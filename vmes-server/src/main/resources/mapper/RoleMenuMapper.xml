<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_role_menu:角色菜单表:角色按钮 Mapper.xml
创建人：陈刚 自动创建
创建时间：2018-07-30
 -->
<mapper namespace="com.xy.vmes.deecoop.system.dao.RoleMenuMapper">

    <!--表名 自动创建，禁止修改-->
    <sql id="tableName">
	vmes_role_menu
    </sql>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">
        data_type dataType,
		role_id roleId,<!-- 角色ID -->
		menu_id menuId,<!-- 菜单表ID -->
		isdisable isdisable,<!-- 是否禁用(0:已禁用 1:启用) 数据字典:sys_isdisable -->
		cdate cdate,<!-- 创建时间 -->
		cuser cuser,<!-- 创建人账号 -->
		udate udate,<!-- 修改时间 -->
		uuser uuser,<!-- 修改人账号 -->
		id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，禁止修改-->
    <sql id="FieldValue">
        #{dataType},
		#{roleId},<!-- 角色ID -->
		#{menuId},<!-- 菜单表ID -->
		#{isdisable},<!-- 是否禁用(0:已禁用 1:启用) 数据字典:sys_isdisable -->
		#{cdate},<!-- 创建时间 -->
		#{cuser},<!-- 创建人账号 -->
		#{udate},<!-- 修改时间 -->
		#{uuser},<!-- 修改人账号 -->
		#{id} <!-- id -->
    </sql>


    <!-- 字段值 自动创建，禁止修改-->
    <sql id="Column">
        '角色ID'  roleId,
        '菜单表ID'  menuId,
        '是否禁用(0:已禁用 1:启用) 数据字典:sys_isdisable'  isdisable,
        '创建时间'  cdate,
        '创建人账号'  cuser,
        '修改时间'  udate,
        '修改人账号'  uuser,
        'id' id
    </sql>

    <!-- 自动创建，禁止修改 -->
    <select id="findColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column"></include>
        from dual
    </select>

    <!-- 自动创建，禁止修改 -->
    <select id="findDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
            <if test="keywords!= null and keywords != ''"><!-- 关键词检索 -->
                and
                (
                <!--	根据需求自己加检索条件
                            字段1 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                             or
                            字段2 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                        -->
                )
            </if>
        </where>
    </select>

    <!-- 列表 自动创建，禁止修改-->
    <select id="dataListPage" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.RoleMenu">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
            <if test="keywords!= null and keywords != ''"><!-- 关键词检索 -->
                and
                (
                <!--	根据需求自己加检索条件
                            字段1 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                             or
                            字段2 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                        -->
                )
            </if>
        </where>
    </select>

    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.RoleMenu">
        select
            <include refid="Field"></include>
        from
            <include refid="tableName"></include>
        <choose>
            <!--
                mapSize (0 or is null) 无查询参数-业务层传入
                isQueryAll 是否查询全部
                fasle: (false or is null) 无查询条件-查询结果集返回空或list.size()==0
                true : 无查询条件-返回全部业务表数据
            -->
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <!--isSelfExist 是否考虑自己在业务表中是否存在
                        false: (false or is null) 无需考虑自己在业务表中是否存在
                        true : 需要考虑自己在业务表中是否存在
                    -->
                    <if test="id != null and id != ''" >
                        <choose>
                            <when test="'true' == isSelfExist">
                                <![CDATA[ and id <> #{id} ]]>
                            </when>
                            <otherwise>
                                and id = #{id}
                            </otherwise>
                        </choose>
                    </if>
                    <if test="menuId != null and menuId != ''" >
                        and menu_id=#{menuId}
                    </if>
                    <if test="roleId != null and roleId != ''" >
                        and role_id=#{roleId}
                    </if>
                    <if test="isdisable != null and isdisable != ''" >
                        and isdisable=#{isdisable}
                    </if>

                    <!--queryStr 自定义sql查询语句-->
                    <if test="queryStr != null and queryStr!=''" >
                        and ${queryStr}
                    </if>
                </where>
            </otherwise>
        </choose>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from
        <include refid="tableName"></include>
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>



    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <update id="updateDisableByRoleId" parameterType="java.lang.String" >
        update <include refid="tableName" />
        set isdisable = 0
        where
        role_id = #{roleId}
    </update>


    <select id="getNoRoleMenuMapList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.TreeEntity">
        select
        a.id,
        a.pid as pid,
        a.company_id as companyId,
        a.code as code,
        a.name as name,

        a.name_en as nameEn,
        a.serial_number as serialNumber,
        a.icon as icon,
        a.type as type,
        a.url as url,

        a.isleaf as isleaf,
        a.layer as layer,
        a.isdisable as isdisable,
        a.cdate as cdate,
        a.cuser as cuser,

        a.udate as udate,
        a.uuser as uuser,
        a.id_0 as id0,
        a.id_1 as id1,
        a.id_2 as id2,

        a.id_3 as id3,
        a.id_4 as id4,
        a.id_5 as id5,

        '2' as dataType

        from vmes_menu a
    </select>



    <select id="getRoleMenuMapList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.TreeEntity">
        select
        a.id,
        a.pid as pid,
        a.company_id as companyId,
        a.code as code,
        a.name as name,

        a.name_en as nameEn,
        a.serial_number as serialNumber,
        a.icon as icon,
        a.type as type,
        a.url as url,

        a.isleaf as isleaf,
        a.layer as layer,
        a.isdisable as isdisable,
        a.cdate as cdate,
        a.cuser as cuser,

        a.udate as udate,
        a.uuser as uuser,
        a.id_0 as id0,
        a.id_1 as id1,
        a.id_2 as id2,

        a.id_3 as id3,
        a.id_4 as id4,
        a.id_5 as id5,

        b.menu_id as menuId,
        b.role_id as roleId,
        b.data_type as dataType

        from vmes_menu a
        left join vmes_role_menu b on a.id = b.menu_id
        <choose>
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <if test="roleIds != null and roleIds != ''" >
                        and b.role_id in (${roleIds})
                    </if>
                    <if test="roleId != null and roleId != ''" >
                        and b.role_id = #{roleId}
                    </if>
                    <if test="menuId != null and menuId != ''" >
                        and b.menu_id = #{menuId}
                    </if>
                    <if test="isdisable != null and isdisable != ''" >
                        and b.isdisable = #{isdisable}
                    </if>
                    <if test="isdisable != null and isdisable != ''" >
                        and a.isdisable = #{isdisable}
                    </if>
                    <!--queryStr 自定义sql查询语句 b.role_id in ()-->
                    <if test="queryStr != null and queryStr != ''" >
                        and ${queryStr}
                    </if>

                    <if test="rootStr != null and rootStr != ''" >
                        or ${rootStr}
                    </if>

                </where>
            </otherwise>
        </choose>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>







    <select id="findRoleMenuMapList" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            a.id,
            a.pid as menuPid,
            a.company_id as menuCompanyId,
            a.code as menuCode,
            a.name as menuName,

            a.name_en as menuNameEn,
            a.serial_number as menuSerialNumber,
            a.icon as menuIcon,
            a.type as menuType,
            a.url as menuUrl,

            a.isleaf as menuIsleaf,
            a.layer as menuLayer,
            a.isdisable as menuIsdisable,
            a.cdate as menuCdate,
            a.cuser as menuCuser,

            a.udate as menuUdate,
            a.uuser as menuUuser,
            a.id_0 as menuId0,
            a.id_1 as menuId1,
            a.id_2 as menuId2,

            a.id_3 as menuId3,
            a.id_4 as menuId4,
            a.id_5 as menuId5,

            b.menu_id as menuId,
            b.role_id as roleId,
            b.data_type as dataType,
            b.isdisable as isdisable
        from vmes_menu a
            left join vmes_role_menu b on a.id = b.menu_id
        <choose>
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <if test="roleIds != null and roleIds != ''" >
                        and b.role_id in (${roleIds})
                    </if>
                    <if test="roleId != null and roleId != ''" >
                        and b.role_id = #{roleId}
                    </if>
                    <if test="menuId != null and menuId != ''" >
                        and b.menu_id = #{menuId}
                    </if>
                    <if test="isdisable != null and isdisable != ''" >
                        and b.isdisable = #{isdisable}
                    </if>
                    <if test="menuIsdisable != null and menuIsdisable != ''" >
                        and a.isdisable = #{menuIsdisable}
                    </if>
                    <!--queryStr 自定义sql查询语句 b.role_id in ()-->
                    <if test="queryStr != null and queryStr != ''" >
                        and ${queryStr}
                    </if>

                    <if test="rootStr != null and rootStr != ''" >
                        or ${rootStr}
                    </if>

                </where>
            </otherwise>
        </choose>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!--获取全部菜单表-根据角色ID-->
    <select id="listMenuMapByRole" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            a.id,
            a.pid as menuPid,
            a.company_id as menuCompanyId,
            a.code as menuCode,
            a.name as menuName,

            a.name_en as menuNameEn,
            a.serial_number as menuSerialNumber,
            a.icon as menuIcon,
            a.type as menuType,
            a.url as menuUrl,

            a.isleaf as menuIsleaf,
            a.layer as menuLayer,
            a.isdisable as menuIsdisable,
            a.cdate as menuCdate,
            a.cuser as menuCuser,

            a.udate as menuUdate,
            a.uuser as menuUuser,
            a.id_0 as menuId0,
            a.id_1 as menuId1,
            a.id_2 as menuId2,

            a.id_3 as menuId3,
            a.id_4 as menuId4,
            a.id_5 as menuId5,

            b.menu_id as menuId,
            b.role_id as roleId,
            b.data_type as dataType,
            b.isdisable as isdisable
        from vmes_menu a
            left join vmes_role_menu b on a.id = b.menu_id
            <!--queryRoleIds 自定义sql查询语句 b.role_id in ()-->
            <if test="queryRoleIds != null and queryRoleIds != ''" >
                and ${queryRoleIds}
            </if>
        <where>
            <!--queryStr 自定义sql查询语句 b.role_id in ()-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
            <if test="roleIds != null and roleIds != ''" >
                and b.role_id in (${roleIds})
            </if>
            <if test="roleId != null and roleId != ''" >
                and b.role_id = #{roleId}
            </if>
            <if test="menuId != null and menuId != ''" >
                and b.menu_id = #{menuId}
            </if>
            <if test="isdisable != null and isdisable != ''" >
                and b.isdisable = #{isdisable}
            </if>
            <if test="menuIsdisable != null and menuIsdisable != ''" >
                and a.isdisable = #{menuIsdisable}
            </if>
            <if test="rootStr != null and rootStr != ''" >
                or ${rootStr}
            </if>
        </where>
    </select>



    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteMenuFromParentRole" parameterType="com.yvan.PageData">
        delete from
        <include refid="tableName"></include>
        where
        id in
        (
            select * from (
            select distinct roleMenu.id
            from vmes_user_role userRole
            left join vmes_user vmesUser on vmesUser.id = userRole.user_id
            left join vmes_role role on role.company_id = vmesUser.company_id
            left join vmes_role_menu roleMenu on roleMenu.role_id = role.id
        <where>
            <if test="roleId != null and roleId!=''" >
                and userRole.role_id = #{roleId}
            </if>
            <if test="companyId != null and companyId!=''" >
                and role.company_id = #{companyId}
            </if>
            and role.id is not null and roleMenu.id is not null
            and roleMenu.menu_id not in
            (
              select menu_id from vmes_role_menu
            <where>
                <if test="roleId != null and roleId!=''" >
                    and role_id = #{roleId}
                </if>
            </where>
            )
        </where>
            )tab
        )
    </delete>

</mapper>