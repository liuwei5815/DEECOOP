<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_product_property:产品属性 Mapper.xml
创建人：陈刚 自动创建
创建时间：2018-09-21
 -->
<mapper namespace="com.xy.vmes.deecoop.base.dao.ProductPropertyMapper">

    <!--表名 自动创建，禁止修改-->
    <sql id="tableName">
	vmes_product_property
    </sql>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">
        prod_id prodId,<!-- 产品id -->
        name name,<!-- 属性名称 -->
        value value,<!-- 属性值 -->
        remark remark,<!-- 备注 -->
        cuser cuser,<!-- 创建用户id -->
        cdate cdate,<!-- 创建时间 -->
        uuser uuser,<!-- 修改用户id -->
        udate udate,<!-- 修改时间 -->
        isdisable isdisable,<!-- 是否启用(0:已禁用 1:启用) -->
        id id <!-- id -->
    </sql>

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from
        <include refid="tableName"></include>
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>

    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'product' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'productProperty','prodId','产品id',1, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'productProperty','name','属性名称',2, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'productProperty','value','属性值',3, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'productProperty','remark','备注',4, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'productProperty','cuser','创建用户id',5, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'productProperty','cdate','创建时间',6, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'productProperty','uuser','修改用户id',7, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'productProperty','udate','修改时间',8, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'productProperty','isdisable','是否启用(0:已禁用 1:启用)',9, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'productProperty','id','id',0, '1','1','1','0',now(), 'admin')
    </insert>


    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.ProductProperty">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <choose>
            <!--
                mapSize (0 or is null) 无查询参数-业务层传入
                isQueryAll 是否查询全部
                fasle: (false or is null) 无查询条件-查询结果集返回空或list.size()==0
                true : 无查询条件-返回全部业务表数据
            -->
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <!--isSelfExist 是否考虑自己在业务表中是否存在
                        false: (false or is null) 无需考虑自己在业务表中是否存在
                        true : 需要考虑自己在业务表中是否存在
                    -->
                    <if test="id != null and id != ''" >
                        <choose>
                            <when test="'true' == isSelfExist">
                                <![CDATA[ and id <> #{id} ]]>
                            </when>
                            <otherwise>
                                and id = #{id}
                            </otherwise>
                        </choose>
                    </if>
                    <!--queryStr 自定义sql查询语句-->
                    <if test="queryProdIdsStr != null and queryProdIdsStr != ''" >
                        and prod_id in (${queryProdIdsStr})
                    </if>

                    <if test="prodId != null and prodId != ''" >
                        and prod_id=#{prodId}
                    </if>
                    <if test="isdisable != null and isdisable != ''" >
                        and isdisable=#{isdisable}
                    </if>

                    <!--queryStr 自定义sql查询语句-->
                    <if test="queryStr != null and queryStr != ''" >
                        and ${queryStr}
                    </if>
                </where>
            </otherwise>
        </choose>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
            <if test="code != null and code != ''">
                and code LIKE CONCAT(CONCAT('%', #{code}),'%')
            </if>
            <if test="name != null and name != ''">
                and name LIKE CONCAT(CONCAT('%', #{name}),'%')
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>




</mapper>