<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：数据字典 Mapper.xml
创建人：刘威 自动创建
创建时间：2018-07-31
 -->
<mapper namespace="com.xy.vmes.deecoop.system.dao.DictionaryMapper">

    <!--表名 自动创建，禁止修改-->
    <sql id="tableName">
	vmes_dictionary
    </sql>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">
		pid pid,<!-- 上级id-根root -->
		code code,<!-- 字典编码 -->
		name name,<!-- 字典名称 -->
		serial_number serialNumber,<!-- 字典排列序号 -->
		layer layer,<!-- 字典级别(最大支持5层)-头2层系统默认 -->
		column_1 column1,<!-- 预留字段 -->
		column_2 column2,<!-- 预留字段 -->
		column_3 column3,<!-- 预留字段 -->
		id_0 id0,<!-- 根root节点ID-默认层(智能云管家) -->
		id_1 id1,<!-- (company:公司 system:系统) -->
		id_2 id2,<!-- 一级节点ID -->
		id_3 id3,<!-- 二级节点ID -->
		id_4 id4,<!-- 三级节点ID -->
		id_5 id5,<!-- 四级节点ID -->
		id_6 id6,<!-- 五级节点ID -->
		isdisable isdisable,<!-- 是否禁用(0:已禁用 1:启用) 数据字典:sys_isdisable -->
		cdate cdate,<!-- 创建时间 -->
		cuser cuser,<!-- 创建人账号 -->
		udate udate,<!-- 修改时间 -->
		uuser uuser,<!-- 修改人账号 -->
		isglobal isglobal,<!-- 是否是全局数据字典  0：否  1：是 -->
		company_id companyId,<!-- 所属公司 -->
		name_en nameEn,<!-- 英文名称 -->
		remark remark,<!-- 备注 -->
		id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，禁止修改-->
    <sql id="FieldValue">
		#{pid},<!-- 上级id-根root -->
		#{code},<!-- 字典编码 -->
		#{name},<!-- 字典名称 -->
		#{serialNumber},<!-- 字典排列序号 -->
		#{layer},<!-- 字典级别(最大支持5层)-头2层系统默认 -->
		#{column1},<!-- 预留字段 -->
		#{column2},<!-- 预留字段 -->
		#{column3},<!-- 预留字段 -->
		#{id0},<!-- 根root节点ID-默认层(智能云管家) -->
		#{id1},<!-- (company:公司 system:系统) -->
		#{id2},<!-- 一级节点ID -->
		#{id3},<!-- 二级节点ID -->
		#{id4},<!-- 三级节点ID -->
		#{id5},<!-- 四级节点ID -->
		#{id6},<!-- 五级节点ID -->
		#{isdisable},<!-- 是否禁用(0:已禁用 1:启用) 数据字典:sys_isdisable -->
		#{cdate},<!-- 创建时间 -->
		#{cuser},<!-- 创建人账号 -->
		#{udate},<!-- 修改时间 -->
		#{uuser},<!-- 修改人账号 -->
		#{isglobal},<!-- 是否是全局数据字典  0：否  1：是 -->
		#{companyId},<!-- 所属公司 -->
		#{nameEn},<!-- 英文名称 -->
		#{remark},<!-- 备注 -->
		#{id} <!-- id -->
    </sql>


    <!-- 字段值 自动创建，禁止修改-->
    <sql id="Column">
        '上级id-根root'  pid,
        '字典编码'  code,
        '字典名称'  name,
        '字典排列序号'  serialNumber,
        '字典级别(最大支持5层)-头2层系统默认'  layer,
        '预留字段'  column1,
        '预留字段'  column2,
        '预留字段'  column3,
        '根root节点ID-默认层(智能云管家)'  id0,
        '(company:公司 system:系统)'  id1,
        '一级节点ID'  id2,
        '二级节点ID'  id3,
        '三级节点ID'  id4,
        '四级节点ID'  id5,
        '五级节点ID'  id6,
        '是否禁用(0:已禁用 1:启用) 数据字典:sys_isdisable'  isdisable,
        '创建时间'  cdate,
        '创建人账号'  cuser,
        '修改时间'  udate,
        '修改人账号'  uuser,
        '是否是全局数据字典  0：否  1：是'  isglobal,
        '所属公司'  companyId,
        '英文名称'  nameEn,
        '备注'  remark,
        'id' id
    </sql>

    <!-- 自动创建，禁止修改 -->
    <select id="findColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column"></include>
        from dual
    </select>

    <!-- 自动创建，禁止修改 -->
    <select id="findDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
            <if test="keywords!= null and keywords != ''"><!-- 关键词检索 -->
                and
                (
                <!--	根据需求自己加检索条件
                            字段1 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                             or
                            字段2 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                        -->
                )
            </if>
        </where>
    </select>

    <!-- 列表 自动创建，禁止修改-->
    <select id="dataListPage" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.Dictionary">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
            <if test="keywords!= null and keywords != ''"><!-- 关键词检索 -->
                and
                (
                <!--	根据需求自己加检索条件
                            字段1 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                             or
                            字段2 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                        -->
                )
            </if>
        </where>
    </select>

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from
        <include refid="tableName"></include>
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>

    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->


    <!-- 字段 自动创建，可以修改-->
    <sql id="Field1">
        a.name name,<!-- 字典名称 -->
        b.name parentName,
        a.remark remark,<!-- 备注 -->
        a.isdisable isdisable,<!-- 是否禁用(0:已禁用 1:启用) 数据字典:sys_isdisable -->
        a.layer layer,
        a.cdate cdate,
        a.udate udate,
        a.pid pid,
        a.id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，可以修改-->
    <sql id="Column1">
            '字典名称'  name,
             '上级名称' parentName,
            '备注'  remark,
            '是否启用' isdisable,

            'pid' pid_hide,
            'id' id_hide
    </sql>


    <!-- 自动创建，可以修改 -->
    <select id="getColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column1"></include>
        from dual
    </select>


    <!-- 自动创建，可以修改 -->
    <select id="getDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field1"></include>
        from
        vmes_dictionary a
        left join vmes_dictionary b on a.pid = b.id
        <where>
            <if test="name!= null and name != ''"><!-- 关键词检索 -->
                and a.name LIKE CONCAT(CONCAT('%', #{name}),'%')
            </if>
            <if test="code!= null and code != ''"><!-- 关键词检索 -->
                and a.code LIKE CONCAT(CONCAT('%', #{code}),'%')
            </if>
            <if test="pid!= null and pid != ''"><!-- 关键词检索 -->
                and a.pid = #{pid}
            </if>
            <if test="id!= null and id != ''"><!-- 关键词检索 -->
                and a.id = #{id}
            </if>
            <if test="isdisable!= null and isdisable != ''"><!-- 关键词检索 -->
                and a.isdisable = #{isdisable}
            </if>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
        </where>
        order by a.serial_number ASC
    </select>


    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field1"></include>
        from
        vmes_dictionary a
        left join vmes_dictionary b on a.pid = b.id
        <where>
            <if test="code!= null and code != ''"><!-- 关键词检索 -->
                and a.code LIKE CONCAT(CONCAT('%', #{code}),'%')
            </if>
            <if test="name!= null and name != ''"><!-- 关键词检索 -->
                and a.name LIKE CONCAT(CONCAT('%', #{name}),'%')
            </if>
            <if test="pid!= null and pid != ''"><!-- 关键词检索 -->
                and a.pid = #{pid}
            </if>
            <if test="id!= null and id != ''"><!-- 关键词检索 -->
                and a.id = #{id}
            </if>
            <if test="currentCompanyId != null and currentCompanyId != ''">
                and a.company_id = #{currentCompanyId}
            </if>

            <if test="isdisable!= null and isdisable != ''"><!-- 关键词检索 -->
                and a.isdisable = #{isdisable}
            </if>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
        </where>
            order by a.serial_number ASC
    </select>


    <!-- 自动创建，可以修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update
        <include refid="tableName"></include>
        set isdisable = 0,udate = now()
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
        #{item}
        </foreach>
    </update>

    <!-- 自动创建，可以修改 -->
    <select id="getTreeList"  parameterType="com.yvan.PageData"  resultType="com.xy.vmes.entity.TreeEntity">
        select
            id,
            name,
            pid,
            id value,
            name label,
            layer,
            serial_number serialNumber,
            isdisable
        from <include refid="tableName"/>
        <where>
            <if test="companyId!= null and companyId != ''">
                and company_id = #{companyId}
            </if>
            <if test="code!= null and code != ''">
                and code LIKE CONCAT(CONCAT(#{code}),'%')
            </if>
            <if test="pid != null and pid != ''">
                and pid = #{pid}
            </if>

            <if test="id!= null and id != ''"><!-- 关键词检索 -->
                and id = #{id}
            </if>

            <if test="notInids != null and notInids != ''">
                and id not in (${notInids})
            </if>
            <if test="inIds != null and inIds != ''">
                and id in (${inIds})
            </if>

            <if test="id1!= null and id1 != ''"><!-- 关键词检索 -->
                and id_1 = #{id1}
            </if>
            <if test="isdisable!= null and isdisable != ''">
                and isdisable = #{isdisable}
            </if>
            <if test="name!= null and name != ''">
                and name LIKE CONCAT(CONCAT('%', #{name}),'%')
            </if>
            <if test="isglobal != null and isglobal != ''">
                and isglobal = #{isglobal}
            </if>
            <if test="queryId != null and queryId!=''" >
                and ${queryId}
            </if>

            <if test="'true' == isNeedName">
                and name = #{nameValue}
            </if>
            <if test="'true' == isNotNeedName">
                <![CDATA[ and name <> #{nameValue} ]]>
            </if>

            <if test="queryStr != null and queryStr!=''" >
                ${queryStr}
            </if>
            <if test="selfQueryStr != null and selfQueryStr != ''" >
                or ${selfQueryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>




    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.Dictionary">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <choose>
            <!--
                mapSize (0 or is null) 无查询参数-业务层传入
                isQueryAll 是否查询全部
                fasle: (false or is null) 无查询条件-查询结果集返回空或list.size()==0
                true : 无查询条件-返回全部业务表数据
            -->
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <!--isSelfExist 是否考虑自己在业务表中是否存在
                        false: (false or is null) 无需考虑自己在业务表中是否存在
                        true : 需要考虑自己在业务表中是否存在
                    -->
                    <if test="id != null and id!=''" >
                        <choose>
                            <when test="'true' == isSelfExist">
                                <![CDATA[ and id <> #{id} ]]>
                            </when>
                            <otherwise>
                                and id = #{id}
                            </otherwise>
                        </choose>
                    </if>
                    <if test="pid != null and pid!=''" >
                        and pid = #{pid}
                    </if>
                    <if test="idNotin != null and idNotin!=''" >
                        and id not in (${idNotin})
                    </if>
                    <if test="currentCompanyId != null and currentCompanyId != ''">
                        and company_id = #{currentCompanyId}
                    </if>
                    <if test="code != null and code!=''" >
                        and code = #{code}
                    </if>
                    <if test="name != null and name!=''" >
                        and name = #{name}
                    </if>
                    <if test="isdisable != null and isdisable!=''" >
                        and isdisable = #{isdisable}
                    </if>
                    <!--queryStr 自定义sql查询语句-->
                    <if test="queryStr != null and queryStr!=''" >
                        and ${queryStr}
                    </if>
                </where>
            </otherwise>
        </choose>
    </select>


    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'dictionary' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
        (replace(uuid(), '-', ''),'dictionary','pid','上级id',1, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'dictionary','name','字典名称',3, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'dictionary','parentName','上级名称',4, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'dictionary','isdisable','是否启用',5, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'dictionary','cdate','创建时间',6, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'dictionary','udate','修改时间',7, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'dictionary','remark','备注',8, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'dictionary','id','id',0, '1','0','1','0',now(), 'admin')
    </insert>

    <select id="findDictionaryListByPathName" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            dic.id,dic.name,
            dic.id_0 id0,dic0.name dname0,
            dic.id_1 id1,dic1.name dname1,
            dic.id_2 id2,dic2.name dname2,
            dic.id_3 id3,dic3.name dname3,
            dic.id_4 id4,dic4.name dname4,
            dic.id_5 id5,dic5.name dname5,
            dic.id_6 id6,dic6.name dname6,
            '' pathId,
            '' pathName
        from vmes_dictionary dic
            left join vmes_dictionary dic0 on dic.id_0 = dic0.id
            left join vmes_dictionary dic1 on dic.id_1 = dic1.id
            left join vmes_dictionary dic2 on dic.id_2 = dic2.id
            left join vmes_dictionary dic3 on dic.id_3 = dic3.id
            left join vmes_dictionary dic4 on dic.id_4 = dic4.id
            left join vmes_dictionary dic5 on dic.id_5 = dic5.id
            left join vmes_dictionary dic6 on dic.id_6 = dic6.id
        <where>
            <if test="companyId != null and companyId != ''" >
                and dic.company_id = #{companyId}
            </if>
            <if test="id0= null and id0 != ''">
                and dic.id_0 = #{id0}
            </if>
            <if test="id1!= null and id1 != ''">
                and dic.id_1 = #{id1}
            </if>

            <if test="id2!= null and id2 != ''">
                and dic.id_2 = #{id2}
            </if>
            <if test="id3!= null and id3 != ''">
                and dic.id_3 = #{id3}
            </if>

            <if test="id4!= null and id4 != ''">
                and dic.id_4 = #{id4}
            </if>
            <if test="id5!= null and id5 != ''">
                and dic.id_5 = #{id5}
            </if>

            <if test="layer != null" >
                and dic.layer = ${layer}
            </if>
            <if test="pathLayer != null" >
                and dic.layer >= ${pathLayer}
            </if>

            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

</mapper>