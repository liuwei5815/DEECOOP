<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_user_role:用户角色表 Mapper.xml
创建人：刘威 自动创建
创建时间：2018-07-26
 -->
<mapper namespace="com.xy.vmes.deecoop.system.dao.UserRoleMapper">

    <!--表名 自动创建，禁止修改-->
    <sql id="tableName">
	vmes_user_role
    </sql>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">
		user_id userId,<!-- 用户ID -->
		role_id roleId,<!-- 角色ID -->
		isdisable isdisable,<!-- 是否禁用(0:已禁用 1:启用) 数据字典:sys_isdisable -->
		cdate cdate,<!-- 创建时间 -->
		cuser cuser,<!-- 创建人账号 -->
		udate udate,<!-- 修改时间 -->
		uuser uuser,<!-- 修改人账号 -->
		id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，禁止修改-->
    <sql id="FieldValue">
		#{userId},<!-- 用户ID -->
		#{roleId},<!-- 角色ID -->
		#{isdisable},<!-- 是否禁用(0:已禁用 1:启用) 数据字典:sys_isdisable -->
		#{cdate},<!-- 创建时间 -->
		#{cuser},<!-- 创建人账号 -->
		#{udate},<!-- 修改时间 -->
		#{uuser},<!-- 修改人账号 -->
		#{id} <!-- id -->
    </sql>


    <!-- 字段值 自动创建，禁止修改-->
    <sql id="Column">
        '用户ID'  userId,
        '角色ID'  roleId,
        '是否禁用(0:已禁用 1:启用) 数据字典:sys_isdisable'  isdisable,
        '创建时间'  cdate,
        '创建人账号'  cuser,
        '修改时间'  udate,
        '修改人账号'  uuser,
        'id' id
    </sql>

    <!-- 自动创建，禁止修改 -->
    <select id="findColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column"></include>
        from dual
    </select>

    <!-- 自动创建，禁止修改 -->
    <select id="findDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
            <if test="keywords!= null and keywords != ''"><!-- 关键词检索 -->
                and
                (
                <!--	根据需求自己加检索条件
                            字段1 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                             or
                            字段2 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                        -->
                )
            </if>
        </where>
    </select>

    <!-- 列表 自动创建，禁止修改-->
    <select id="dataListPage" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.UserRole">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
            <if test="keywords!= null and keywords != ''"><!-- 关键词检索 -->
                and
                (
                <!--	根据需求自己加检索条件
                            字段1 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                             or
                            字段2 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                        -->
                )
            </if>
        </where>
    </select>

    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.UserRole">
        select
            <include refid="Field"></include>
        from
            <include refid="tableName"></include>
        <choose>
            <!--
                mapSize (0 or is null) 无查询参数-业务层传入
                isQueryAll 是否查询全部
                fasle: (false or is null) 无查询条件-查询结果集返回空或list.size()==0
                true : 无查询条件-返回全部业务表数据
            -->
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <!--isSelfExist 是否考虑自己在业务表中是否存在
                        false: (false or is null) 无需考虑自己在业务表中是否存在
                        true : 需要考虑自己在业务表中是否存在
                    -->
                    <if test="id != null and id!=''" >
                        <choose>
                            <when test="'true' == isSelfExist">
                                <![CDATA[ and id <> #{id} ]]>
                            </when>
                            <otherwise>
                                and id = #{id}
                            </otherwise>
                        </choose>
                    </if>
                    <if test="userId != null and userId != ''" >
                        and user_id=#{userId}
                    </if>
                    <if test="roleId != null and roleId != ''" >
                        and role_id=#{roleId}
                    </if>
                    <if test="isdisable != null and isdisable != ''" >
                        and isdisable=#{isdisable}
                    </if>

                    <!--queryStr 自定义sql查询语句-->
                    <if test="queryStr != null and queryStr!=''" >
                        and ${queryStr}
                    </if>
                </where>
            </otherwise>
        </choose>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from
        <include refid="tableName"></include>
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>



    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->

    <update id="updateDisableByRoleId" parameterType="java.lang.String" >
        update <include refid="tableName" />
            set isdisable = 0,udate = now()
        where
            role_id = #{roleId}
    </update>

    <select id="findUserRoleMapList" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            a.id,
            a.user_id as userId,
            a.isdisable as isdisable,

            b.id as roleId,
            b.company_id as roleCompanyId,
            b.name as roleName,
            b.name_en as roleNameEn,
            b.isdisable as roleIsdisable,

            b.cdate as roleCdate,
            b.cuser as roleCuser,
            b.udate as roleUdate,
            b.uuser as roleUuser
        from vmes_user_role a
            left join vmes_role b on a.role_id = b.id
        <choose>
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <if test="userId != null and userId != ''" >
                        and a.user_id = #{userId}
                    </if>
                    <if test="roleId != null and roleId != ''" >
                        and b.id = #{roleId}
                    </if>
                    <if test="isdisable != null and isdisable != ''" >
                        and a.isdisable = #{isdisable}
                    </if>
                    <if test="roleIsdisable != null and roleIsdisable != ''" >
                        and b.isdisable = #{roleIsdisable}
                    </if>

                    <!--queryStr 自定义sql查询语句-->
                    <if test="queryStr != null and queryStr!=''" >
                        and ${queryStr}
                    </if>
                </where>
            </otherwise>
        </choose>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 当前角色id已经绑定用户List 或 当前角色id没有绑定用户List-->
    <sql id="UserField">
        <!--查询显示字段-->
        user.user_code userCode,
        user.user_name userName,
        role.name roleName,
        <!--查询隐藏字段-->
        CASE
          WHEN userRole.role_id is null THEN false
          WHEN userRole.role_id is not null THEN true
        ELSE null
        END isBindRole,
        userRole.role_id roleId,
        user.id id,
        user.isdisable isdisable,
        user.cdate cdate,
        user.cuser cuser
    </sql>
    <select id="listUserByRole" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select <include refid="UserField" />
        from vmes_user user
            left join vmes_user_role userRole on user.id = userRole.user_id
            left join vmes_role role on userRole.role_id = role.id
            left join vmes_department dept on user.dept_id = dept.id
        <where>
            <if test="deptId != null and deptId != ''" >
                and user.dept_id = #{deptId}
            </if>
            <if test="companyId != null and companyId != ''" >
                and user.company_id = #{companyId}
            </if>
            <if test="userIsdisable != null and userIsdisable != ''" >
                and user.isdisable = #{userIsdisable}
            </if>
            <if test="roleId != null and roleId != ''" >
                and userRole.role_id = #{roleId}
            </if>

            <if test="cuser != null and cuser != ''">
                and user.company_id in (select company_id from vmes_user where id = #{cuser})
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
            <!--queryUserIdStr user.id not in 查询字句-->
            <if test="queryUserIdStr != null and queryUserIdStr != ''" >
                and ${queryUserIdStr}
            </if>

            <!--queryIsBindRole 自定义sql查询语句-->
            <if test="queryIsBindRole != null and queryIsBindRole != ''" >
                and ${queryIsBindRole}
            </if>
            <!--queryUserType 自定义sql查询语句-->
            <if test="queryUserType != null and queryUserType != ''" >
                and ${queryUserType}
            </if>
        </where>
    </select>

    <sql id="UserColumn">
        <!--查询显示字段-->
        '账号' userCode,
        '姓名' userName,
        <!--查询隐藏字段-->
        'id' id_hide,
        'isdisable' isdisable_hide,
        'cdate' cdate_hide,
        'cuser' cuser_hide
    </sql>
    <select id="listUserColumn" resultType="java.util.LinkedHashMap">
        select
        <include refid="UserColumn"/>
        from dual
    </select>


</mapper>