<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_task:系统执行表(任务代办) Mapper.xml
创建人：陈刚 自动创建
创建时间：2019-01-30
 -->
<mapper namespace="com.xy.vmes.deecoop.system.dao.TaskMapper">

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from vmes_task
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>


    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update vmes_task
        set isdisable = '0' ,udate = now()
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
        #{item}
        </foreach>
    </update>

    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'task' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'task','id','id',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'task','businessId','业务id',4, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'task','executorId','执行人ID',3, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'task','type','类型(1:入库 2:出库 3:盘点 4:移库)',1, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'task','state','执行状态(0:执行中 1:已完成)',2, '1','1','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''),'task','taskName','任务名称',5, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'task','remark','备注',6, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'task','cuser','创建用户id',7, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'task','cdate','创建时间',8, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'task','uuser','修改用户id',9, '1','1','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''),'task','udate','修改时间',10, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'task','isdisable','是否启用(0:已禁用 1:启用)',11, '1','1','1','0',now(), 'admin'),
    </insert>


    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.Task">
        select
        id id,
        company_id companyId,
        business_id businessId,
        executor_id executorId,
        type type,
        state state,

        task_name taskName,
        remark remark,
        cuser cuser,
        cdate cdate,
        uuser uuser,

        udate udate,
        isdisable isdisable
        from vmes_task
        <where>
            <!--isSelfExist 是否考虑自己在业务表中是否存在
                false: (false or is null) 无需考虑自己在业务表中是否存在
                true : 需要考虑自己在业务表中是否存在
            -->
            <if test="id != null and id != ''" >
                <choose>
                    <when test="'true' == isSelfExist">
                        <![CDATA[ and id <> #{id} ]]>
                    </when>
                    <otherwise>
                        and id = #{id}
                    </otherwise>
                </choose>
            </if>
            <if test="businessId != null and businessId != ''" >
                and business_id = #{businessId}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            task.id id,
            task.company_id companyId,
            task.business_id businessId,
            task.executor_id executorId,
            task.type type,

            task.state state,
            task.task_name taskName,
            task.remark remark,
            task.cuser cuser,
            task.cdate cdate,

            task.uuser uuser,
            task.udate udate,
            task.isdisable isdisable,

            executorUser.user_name executorUserName
        from vmes_task task
            left join vmes_user executorUser on task.executor_id = executorUser.id

        <where>
            <if test="executorId != null and executorId != ''" >
                and task.executor_id = #{executorId}
            </if>
            <if test="state != null and state != ''" >
                and task.state = #{state}
            </if>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>

        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

</mapper>