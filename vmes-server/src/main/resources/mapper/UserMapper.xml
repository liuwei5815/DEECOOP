<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_user:系统用户表 Mapper.xml
创建人：刘威 自动创建
创建时间：2018-07-26
 -->
<mapper namespace="com.xy.vmes.deecoop.system.dao.UserMapper">

    <!--表名 自动创建，禁止修改-->
    <sql id="tableName">
	vmes_user
    </sql>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">
		employ_id employId,<!-- 员工ID -->
		dept_id deptId,<!-- 部门ID -->
		company_id companyId,<!-- 公司ID-组织架构 -->
		user_code userCode,<!-- 账号(系统登录账号) -->
		password password,<!-- 密码(MD5加密) -->
		open_id openId,<!-- 用户微信ID -->
		mobile mobile,<!-- 手机号码 -->
		email email,<!-- 邮箱地址 -->
		user_name userName,<!-- 姓名 -->
		page_style pageStyle,<!-- 界面样式风格 -->
		isdisable isdisable,<!-- 是否禁用(0:已禁用 1:启用) 数据字典:sys_isdisable -->
		cdate cdate,<!-- 创建时间 -->
		cuser cuser,<!-- 创建人账号 -->
		udate udate,<!-- 修改时间 -->
		uuser uuser,<!-- 修改人账号 -->
		column_1 column1,<!-- 预留字段 -->
		column_2 column2,<!-- 预留字段 -->
		column_3 column3,<!-- 预留字段 -->
        user_type userType,<!-- 用户类型 -->
		id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，禁止修改-->
    <sql id="FieldValue">
		#{employId},<!-- 员工ID -->
		#{deptId},<!-- 部门ID -->
		#{companyId},<!-- 公司ID-组织架构 -->
		#{userCode},<!-- 账号(系统登录账号) -->
		#{password},<!-- 密码(MD5加密) -->
		#{openId},<!-- 用户微信ID -->
		#{mobile},<!-- 手机号码 -->
		#{email},<!-- 邮箱地址 -->
		#{userName},<!-- 姓名 -->
		#{pageStyle},<!-- 界面样式风格 -->
		#{isdisable},<!-- 是否禁用(0:已禁用 1:启用) 数据字典:sys_isdisable -->
		#{cdate},<!-- 创建时间 -->
		#{cuser},<!-- 创建人账号 -->
		#{udate},<!-- 修改时间 -->
		#{uuser},<!-- 修改人账号 -->
		#{column1},<!-- 预留字段 -->
		#{column2},<!-- 预留字段 -->
		#{column3},<!-- 预留字段 -->
        #{userType},<!-- 用户类型 -->
		#{id} <!-- id -->
    </sql>


    <!-- 字段值 自动创建，禁止修改-->
    <sql id="Column">
        '员工ID'  employId,
        '部门ID'  deptId,
        '公司ID-组织架构'  companyId,
        '账号(系统登录账号)'  userCode,
        '密码(MD5加密)'  password,
        '用户微信ID'  openId,
        '手机号码'  mobile,
        '邮箱地址'  email,
        '姓名'  userName,
        '界面样式风格'  pageStyle,
        '是否禁用(0:已禁用 1:启用) 数据字典:sys_isdisable'  isdisable,
        '创建时间'  cdate,
        '创建人账号'  cuser,
        '修改时间'  udate,
        '修改人账号'  uuser,
        '预留字段'  column1,
        '预留字段'  column2,
        '预留字段'  column3,
        '用户类型'  userType,
        'id' id
    </sql>

    <!-- 自动创建，禁止修改 -->
    <select id="findColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column"></include>
        from dual
    </select>

    <!-- 自动创建，禁止修改 -->
    <select id="findDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
            <if test="keywords!= null and keywords != ''"><!-- 关键词检索 -->
                and
                (
                <!--	根据需求自己加检索条件
                            字段1 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                             or
                            字段2 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                        -->
                )
            </if>
        </where>
    </select>

    <!-- 列表 自动创建，禁止修改-->
    <select id="dataListPage" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.User">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
            <if test="keywords!= null and keywords != ''"><!-- 关键词检索 -->
                and
                (
                <!--	根据需求自己加检索条件
                            字段1 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                             or
                            字段2 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                        -->
                )
            </if>
        </where>
    </select>

    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.User">
        select
            <include refid="Field"></include>
        from
            <include refid="tableName"></include>
        <choose>
            <!--
                mapSize (0 or is null) 无查询参数-业务层传入
                isQueryAll 是否查询全部
                fasle: (false or is null) 无查询条件-查询结果集返回空或list.size()==0
                true : 无查询条件-返回全部业务表数据
            -->
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <!--isSelfExist 是否考虑自己在业务表中是否存在
                        false: (false or is null) 无需考虑自己在业务表中是否存在
                        true : 需要考虑自己在业务表中是否存在
                    -->
                    <if test="id != null and id!=''" >
                        <choose>
                            <when test="'true' == isSelfExist">
                                <![CDATA[ and id <> #{id} ]]>
                            </when>
                            <otherwise>
                                and id = #{id}
                            </otherwise>
                        </choose>
                    </if>
                    <if test="companyId != null and companyId != ''" >
                        and company_id = #{companyId}
                    </if>
                    <if test="deptId != null and deptId != ''" >
                        and dept_id = #{deptId}
                    </if>

                    <if test="userCode != null and userCode != ''" >
                        and user_code = #{userCode}
                    </if>
                    <if test="mobile != null and mobile != ''" >
                        and mobile = #{mobile}
                    </if>
                    <if test="isdisable != null and isdisable != ''" >
                        and isdisable = #{isdisable}
                    </if>
                    <if test="userType != null and userType != ''" >
                        and user_type = #{userType}
                    </if>

                    <!--queryStr 自定义sql查询语句-->
                    <if test="queryStr != null and queryStr!=''" >
                        and ${queryStr}
                    </if>
                </where>
            </otherwise>
        </choose>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from
        <include refid="tableName"></include>
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>



    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->


    <!-- 判断用户手机号是否存在  刘威 -->
    <select id="isExistMobile"  parameterType="com.yvan.PageData"  resultType="com.xy.vmes.entity.User">
        select
        id
        from
        <include refid="tableName"></include>
        where
            company_id = #{currentCompanyId} and mobile = #{mobile} and isdisable = 1  and user_type not in ('2fb9bbee46ca4ce1913f3a673a7dd68f','6839818aecfc41be8f367e62502dfde4')   <!-- 超级管理员  企业管理员-->
            <if test="id != null and id!=''" >
                <![CDATA[ and id <> #{id} ]]>
            </if>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
    </select>

    <!-- 刘威 2018-08-03-->
    <update id="updateToDisableByEmployIds" parameterType="java.lang.String" >
        update
        <include refid="tableName"></include>
        set isdisable = 0,udate = now()
        where isdisable =0 and employ_id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <!-- 批量修改用户信息为禁用状态 刘威-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update
        <include refid="tableName"></include>
        set isdisable = 0,udate = now()
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>


    <!-- 表格列名 刘威-->
    <sql id="Column1">
        '账号'  userCode,
        '姓名'  userName,
        '手机号'  mobile,
        '邮箱'  email,
        '用户类型' userType,
        '角色名称' roleName,
        '所属公司' companyName,
        '是否启用'  isdisable,
        '员工ID'  employId_hide,
        '角色ID'  roleId_hide,
        '部门ID'  deptId_hide,
        '公司ID'  companyId_hide,
        '创建时间'  cdate,
        'id' id_hide
    </sql>

    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'user' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
        (replace(uuid(), '-', ''),'user','userCode','账号',1, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','userName','姓名',2, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','mobile','手机号',3, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','email','邮箱',4, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','userTypeName','用户类型',5, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','roleName','角色名称',6, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','deptName','所属部门',7, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','companyName','所属公司',8, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','isdisable','是否启用',9, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','employeeCode','员工',10, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','remark','备注',11, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','cdate','创建时间',12, '1','0','1','0',now(), 'admin'),


        (replace(uuid(), '-', ''),'user','employeeId','员工ID',13, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','roleId','角色ID',14, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','deptId','部门ID',15, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','companyId','公司ID',16, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','userType','用户类型ID',17, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','password','密码',18, '1','0','1','0',now(), 'admin'),

        (replace(uuid(), '-', ''),'user','employeePoliticalName','政治面貌',19, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','employeePolitical','政治面貌ID',20, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','employeeName','员工姓名',21, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','employeeMobile','手机号',22, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','employeeEmail','邮箱',23, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','employeeBirthday','出生日期',24, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','employeeEntryDate','入职日期',25, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','employeeNativePlace','籍贯',26, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','employeeMarital','婚姻状况',27, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','employeeSex','性别',28, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','employeeIdentityNumber','身份证号',29, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','employeeCdate','创建时间',30, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','employeeCuser','创建人ID',31, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','employeeCuserName','创建人',32, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','employeePostName','岗位',33, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','employeeDeptName','部门',34, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','employeePhoto','员工照片',35, '1','0','1','0',now(), 'admin'),

        (replace(uuid(), '-', ''),'user','id','id',0, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','code','账号',0, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'user','name','姓名',0, '1','1','1','0',now(), 'admin'),
    </insert>

    <!-- 表格表体值 刘威-->
    <sql id="Field1">
        vmesuser.user_code code,<!-- 账号(系统登录账号) -->
        vmesuser.user_name name,<!-- 姓名 -->
        vmesuser.user_code userCode,<!-- 账号(系统登录账号) -->
        vmesuser.user_name userName,<!-- 姓名 -->
        vmesuser.password password,
        vmesuser.remark remark,
        usertype.name userTypeName,<!-- 用户类型名称 -->
        vmesuser.user_type userType,<!-- 用户类型ID -->
        vmesuser.mobile mobile,<!-- 手机号码 -->
        vmesuser.email email,<!-- 邮箱地址 -->
        vmesuser.isdisable isdisable,<!-- 是否禁用(0:已禁用 1:启用) 数据字典:sys_isdisable -->
        vmesuser.employ_id employId,<!-- 员工ID -->


        employee.id employeeId,
        employee.code employeeCode,
        political.name employeePoliticalName,
        employee.political employeePolitical,
        employee.name employeeName,
        employee.mobile employeeMobile,
        employee.email employeeEmail,
        employee.photo employeePhoto,
        employee.birthday employeeBirthday,
        employee.entry_date employeeEntryDate,
        employee.native_place employeeNativePlace,
        case
          when employee.marital='0' then '未婚'
          when employee.marital='1' then '已婚'
        else null
        end  employeeMarital,

        case
        when employee.sex='1' then '男'
        when employee.sex='0' then '女'
        else null
        end  employeeSex,
        employee.identity_number employeeIdentityNumber,
        employee.cdate employeeCdate,
        employee.cuser employeeCuser,
        ecuser.user_name employeeCuserName,
        post.name employeePostName,
        edepartment.name employeeDeptName,


        department.id deptId,<!-- 部门ID -->
        department.name deptName,<!-- 所属部门 -->
        company.id companyId,<!-- 公司ID-组织架构 -->
        company.name companyName,<!-- 所属公司 -->
        vmesuser.cdate cdate,<!-- 创建时间 -->
        role.id roleId,<!-- 角色ID -->
        case when role.company_id = 'b6ff76cb95f711e884ad00163e105f05' then "企业管理员" else role.name end roleName,<!-- 角色名称 -->
        vmesuser.id id <!-- id -->
    </sql>



    <!-- 列表表头查询 -->
    <select id="getColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column1"></include>
        from dual
    </select>

    <!-- 列表表体数据查询 -->
    <select id="getDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field1"></include>
        from vmes_user vmesuser
        left join vmes_department company on company.id = vmesuser.company_id
        left join vmes_user_role userrole on userrole.user_id = vmesuser.id and userrole.isdisable = 1
        left join vmes_role role on role.id = userrole.role_id
        left join vmes_dictionary usertype on vmesuser.user_type = usertype.id
        left join vmes_department department on department.id = vmesuser.dept_id
        left join vmes_employee employee on employee.user_id = vmesuser.id
        left join vmes_user ecuser on ecuser.id = employee.cuser
        left join vmes_dictionary political on political.id = employee.political
        left join vmes_employ_post employeepost on employeepost.employ_id = employee.id and employeepost.isplurality = 0 and employeepost.isdisable = 1
        left join vmes_post post on post.id = employeepost.post_id
        left join vmes_department edepartment on edepartment.id = post.dept_id
        <where>

            <if test="userCode!= null and userCode != ''"><!-- 关键词检索 -->
                and vmesuser.user_code LIKE CONCAT(CONCAT('%', #{userCode}),'%')
            </if>
            <if test="userName!= null and userName != ''"><!-- 关键词检索 -->
                and vmesuser.user_name LIKE CONCAT(CONCAT('%', #{userName}),'%')
            </if>
            <if test="mobile!= null and mobile != ''"><!-- 关键词检索 -->
                and vmesuser.mobile LIKE CONCAT(CONCAT('%', #{mobile}),'%')
            </if>
            <if test="email!= null and email != ''"><!-- 关键词检索 -->
                and vmesuser.email LIKE CONCAT(CONCAT('%', #{email}),'%')
            </if>
            <if test="userType!= null and userType != ''"><!-- 关键词检索 -->
                and vmesuser.user_type LIKE CONCAT(CONCAT('%', #{userType}),'%')
            </if>
            <if test="isdisable!= null and isdisable != ''"><!-- 关键词检索 -->
                and vmesuser.isdisable = #{isdisable}
            </if>
            <if test="deptId!= null and deptId != ''"><!-- 关键词检索 -->
                and vmesuser.dept_id = #{deptId}
            </if>
            <if test="currentCompanyId != null and currentCompanyId != ''">
                and (company.id = #{currentCompanyId} or (company.pid = #{currentCompanyId} and usertype.name = '企业管理员'))
            </if>
            <if test="queryStr != null and queryStr!=''" ><!-- 自定义查询 -->
                and ${queryStr}
            </if>
        </where>
        order by vmesuser.user_code ASC
    </select>


    <!-- 列表表体数据查询 -->
    <select id="getDataListPage"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field1"></include>
        from vmes_user vmesuser
        left join vmes_department company on company.id = vmesuser.company_id
        left join vmes_user_role userrole on userrole.user_id = vmesuser.id
        left join vmes_role role on role.id = userrole.role_id
        left join vmes_dictionary usertype on vmesuser.user_type = usertype.id
        left join vmes_department department on department.id = vmesuser.dept_id
        left join vmes_employee employee on employee.user_id = vmesuser.id
        left join vmes_user ecuser on ecuser.id = employee.cuser
        left join vmes_dictionary political on political.id = employee.political
        left join vmes_employ_post employeepost on employeepost.employ_id = employee.id and employeepost.isplurality = 0 and employeepost.isdisable = 1
        left join vmes_post post on post.id = employeepost.post_id
        left join vmes_department edepartment on edepartment.id = post.dept_id
        <where>
            <if test="userId != null and userId != ''">
                and vmesuser.id = #{userId}
            </if>
            <if test="roleId!= null and roleId != ''">
                and role.id = #{roleId}
            </if>
            <if test="roleName!= null and roleName != ''">
                and role.name = #{roleName}
            </if>

            <if test="userType!= null and userType != ''"><!-- 关键词检索 -->
                and vmesuser.user_type = #{userType}
            </if>
            <if test="userTypeName!= null and userTypeName != ''">
                and usertype.name = #{userTypeName}
            </if>

            <if test="userCode!= null and userCode != ''"><!-- 关键词检索 -->
                and vmesuser.user_code LIKE CONCAT(CONCAT('%', #{userCode}),'%')
            </if>
            <if test="code!= null and code != ''"><!-- 关键词检索 -->
                and vmesuser.user_code LIKE CONCAT(CONCAT('%', #{code}),'%')
            </if>
            <if test="userName!= null and userName != ''"><!-- 关键词检索 -->
                and vmesuser.user_name LIKE CONCAT(CONCAT('%', #{userName}),'%')
            </if>
            <if test="name!= null and name != ''"><!-- 关键词检索 -->
                and vmesuser.user_name LIKE CONCAT(CONCAT('%', #{name}),'%')
            </if>

            <if test="mobile!= null and mobile != ''"><!-- 关键词检索 -->
                and vmesuser.mobile LIKE CONCAT(CONCAT('%', #{mobile}),'%')
            </if>
            <if test="email!= null and email != ''"><!-- 关键词检索 -->
                and vmesuser.email LIKE CONCAT(CONCAT('%', #{email}),'%')
            </if>
            <if test="userType!= null and userType != ''"><!-- 关键词检索 -->
                and vmesuser.user_type LIKE CONCAT(CONCAT('%', #{userType}),'%')
            </if>
            <if test="isdisable!= null and isdisable != ''"><!-- 关键词检索 -->
                and vmesuser.isdisable = #{isdisable}
            </if>
            <if test="currentCompanyId != null and currentCompanyId != ''">
                and (company.id = #{currentCompanyId} or (company.pid = #{currentCompanyId} and usertype.name = '企业管理员'))
            </if>
            <if test="deptName!= null and deptName != ''"><!-- 关键词检索 -->
                and department.name LIKE CONCAT(CONCAT('%', #{deptName}),'%')
            </if>
            <if test="pid!= null and pid != '' and layer != null"><!-- 关键词检索 -->
                and department.id_${layer} = #{pid}
            </if>
            <if test="deptType != null and deptType!=''" >
                and department.dept_type=#{deptType}
            </if>

            <if test="queryStr != null and queryStr!=''" ><!-- 自定义查询 -->
                and ${queryStr}
            </if>
        </where>
            order by vmesuser.cdate desc
    </select>

    <update id="updateDisableByCompanyIds" parameterType="java.lang.String" >
        update <include refid="tableName" />
            set isdisable = '0', company_id = null
        where
            user_type = '1' and company_id in
            <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                #{item}
            </foreach>
    </update>

    <!-- 列表表体数据查询 -->
    <select id="selectCountUserNum"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select count(u.id) currentUsers,d.company_user_count allUsers,case when d.company_user_count>count(u.id) then 0 else 1 end isFull,d.id companyId,d.name companyName
        from vmes_user u
        left join vmes_department d on d.id = u.company_id
        where u.isdisable = 1

        <if test="deptId!= null and deptId != '' "><!-- 关键词检索 -->
            and u.company_id in (select case when id_1 is null or id_1 = '' then id_0 else id_1 end from vmes_department where id = #{deptId} )
        </if>

        <if test="queryStr != null and queryStr!=''" ><!-- 自定义查询 -->
            and ${queryStr}
        </if>

        group by d.id,d.name
    </select>

    <select id="findUserCountByCompanyId" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select company_id, count(id) userCount
        from vmes_user
        <where>
            <if test="companyId != null and companyId != ''" >
                and company_id = #{companyId}
            </if>
            <if test="isdisable!= null and isdisable != ''">
                and isdisable = #{isdisable}
            </if>
        </where>
        group by company_id
    </select>




</mapper>