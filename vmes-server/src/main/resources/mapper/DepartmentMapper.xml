<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_department:系统部门表 Mapper.xml
创建人：陈刚 自动创建
创建时间：2018-07-23
 -->
<mapper namespace="com.xy.vmes.deecoop.system.dao.DepartmentMapper">

    <!--表名 自动创建，禁止修改-->
    <sql id="tableName">
	vmes_department
    </sql>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">
		pid pid,<!-- 上级id-根root -->
		code code,<!-- 部门编码 -->
		name name,<!-- 部门名称 -->
        name_en nameEn,<!-- 英文名称 -->
		isleaf isleaf,<!-- 是否叶子节点(1:叶子节点0:非叶子节点) 数据字典:sys_isleaf -->
		layer layer,<!-- 部门级别(最大支持5层) -->
		serial_number serialNumber,<!-- 部门排列序号 -->
		organize_type organizeType,<!-- 组织类型(1:公司 2:部门) 数据字典:sys_organize_type -->
		company_type companyType,<!-- 公司类型 数据字典:sys_company_type -->
		dept_type deptType,<!-- 部门类型 数据字典:sys_department_type -->
		long_name longName,<!-- 部门长名称(中间使用-链接) -->
		long_code longCode,<!-- 部门长编码(中间使用-链接) -->
        company_shortname companyShortname,
        company_validity_date companyValidityDate,<!-- 有效期(yyyy-mm-dd) -->
		company_user_count companyUserCount,<!-- 系统用户数 -->
		isdisable isdisable,<!-- 是否禁用(1:已禁用 0:启用) 数据字典:sys_isdisable -->
		cdate cdate,<!-- 创建时间 -->
		cuser cuser,<!-- 创建人账号 -->
		udate udate,<!-- 修改时间 -->
		uuser uuser,<!-- 修改人账号 -->
		id_0 id0,<!-- 根root节点ID -->
		id_1 id1,<!-- 一级节点ID -->
		id_2 id2,<!-- 二级节点ID -->
		id_3 id3,<!-- 三级节点ID -->
		id_4 id4,<!-- 四级节点ID -->
		id_5 id5,<!-- 五级节点ID -->
        remark remark,
        area area,
        id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，禁止修改-->
    <sql id="FieldValue">
		#{pid},<!-- 上级id-根root -->
		#{code},<!-- 部门编码 -->
		#{name},<!-- 部门名称 -->
        #{nameEn},
		#{isleaf},<!-- 是否叶子节点(1:叶子节点0:非叶子节点) 数据字典:sys_isleaf -->
		#{layer},<!-- 部门级别(最大支持5层) -->
		#{serialNumber},<!-- 部门排列序号 -->
		#{organizeType},<!-- 组织类型(1:公司 2:部门) 数据字典:sys_organize_type -->
		#{companyType},<!-- 公司类型 数据字典:sys_company_type -->
		#{deptType},<!-- 部门类型 数据字典:sys_department_type -->
		#{longName},<!-- 部门长名称(中间使用-链接) -->
		#{longCode},<!-- 部门长编码(中间使用-链接) -->
        #{companyShortname},
        #{companyValidityDate},<!-- 有效期(yyyy-mm-dd) -->
		#{companyUserCount},<!-- 系统用户数 -->
		#{isdisable},<!-- 是否禁用(1:已禁用 0:启用) 数据字典:sys_isdisable -->
		#{cdate},<!-- 创建时间 -->
		#{cuser},<!-- 创建人账号 -->
		#{udate},<!-- 修改时间 -->
		#{uuser},<!-- 修改人账号 -->
		#{id0},<!-- 根root节点ID -->
		#{id1},<!-- 一级节点ID -->
		#{id2},<!-- 二级节点ID -->
		#{id3},<!-- 三级节点ID -->
		#{id4},<!-- 四级节点ID -->
		#{id5},<!-- 五级节点ID -->
        #{remark},
        #{area},
		#{id} <!-- id -->
    </sql>


    <!-- 字段值 自动创建，禁止修改-->
    <sql id="Column">
        '上级id-根root'  pid,
        '部门编码'  code,
        '部门名称'  name,
        '英文名称' nameEn,
        '是否叶子节点(1:叶子节点0:非叶子节点) 数据字典:sys_isleaf'  isleaf,
        '部门级别(最大支持5层)'  layer,
        '部门排列序号'  serialNumber,
        '组织类型(1:公司 2:部门) 数据字典:sys_organize_type'  organizeType,
        '公司类型 数据字典:sys_company_type'  companyType,
        '部门类型 数据字典:sys_department_type'  deptType,
        '部门长名称(中间使用-链接)'  longName,
        '部门长编码(中间使用-链接)'  longCode,
        '企业简称' ,companyShortname,
        '有效期(yyyy-mm-dd)'  companyValidityDate,
        '系统用户数'  companyUserCount,
        '是否禁用(1:已禁用 0:启用) 数据字典:sys_isdisable'  isdisable,
        '创建时间'  cdate,
        '创建人账号'  cuser,
        '修改时间'  udate,
        '修改人账号'  uuser,
        '根root节点ID'  id0,
        '一级节点ID'  id1,
        '二级节点ID'  id2,
        '三级节点ID'  id3,
        '四级节点ID'  id4,
        '五级节点ID'  id5,
        '备注' remark,
        '地区' area,
        'id' id
    </sql>

    <!-- 自动创建，禁止修改 -->
    <select id="findColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column"></include>
        from dual
    </select>

    <!-- 自动创建，禁止修改 -->
    <select id="findDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <if test="PageData!= null"><!-- 关键词检索 -->
            where 1=1
            <if test="PageData.keywords!= null and PageData.keywords != ''"><!-- 关键词检索 -->
                and
                (
                <!--	根据需求自己加检索条件
						字段1 LIKE CONCAT(CONCAT('%', #{PageData.keywords}),'%')
						 or
						字段2 LIKE CONCAT(CONCAT('%', #{PageData.keywords}),'%')
					-->
                )
            </if>
        </if>
    </select>

    <!-- 列表 自动创建，禁止修改-->
    <select id="dataListPage" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.Department">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <if test="PageData!= null"><!-- 关键词检索 -->
            where 1=1
            <if test="keywords!= null and keywords != ''"><!-- 关键词检索 -->
                and
                (
                <!--	根据需求自己加检索条件
						字段1 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
						 or
						字段2 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
					-->
                )
            </if>
        </if>
    </select>

    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.Department">
        select
            <include refid="Field"></include>
        from
            <include refid="tableName"></include>
        <choose>
            <!--
                mapSize (0 or is null) 无查询参数-业务层传入
                isQueryAll 是否查询全部
                fasle: (false or is null) 无查询条件-查询结果集返回空或list.size()==0
                true : 无查询条件-返回全部业务表数据
            -->
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <!--isSelfExist 是否考虑自己在业务表中是否存在
                        false: (false or is null) 无需考虑自己在业务表中是否存在
                        true : 需要考虑自己在业务表中是否存在
                    -->
                    <if test="id != null and id!=''" >
                        <choose>
                            <when test="'true' == isSelfExist">
                                <![CDATA[ and id <> #{id} ]]>
                            </when>
                            <otherwise>
                                and id = #{id}
                            </otherwise>
                        </choose>
                    </if>
                    <if test="pid != null and pid!=''" >
                        and pid=#{pid}
                    </if>
                    <if test="code != null and code!=''" >
                        and code=#{code}
                    </if>
                    <if test="name != null and name!=''" >
                        and name=#{name}
                    </if>
                    <if test="cuser != null and cuser != ''" >
                        and cuser = #{cuser}
                    </if>

                    <if test="layer != null" >
                        and layer=#{layer}
                    </if>
                    <if test="organizeType != null and organizeType!=''" >
                        and organize_type=#{organizeType}
                    </if>
                    <if test="companyType != null and companyType!=''" >
                        and company_type=#{companyType}
                    </if>
                    <if test="deptType != null and deptType!=''" >
                        and dept_type=#{deptType}
                    </if>
                    <if test="isdisable != null and isdisable!=''" >
                        and isdisable=#{isdisable}
                    </if>

                    <if test="longName != null and longName != ''" >
                        and long_name=#{longName}
                    </if>
                    <if test="id0 != null and id0!=''" >
                        and id_0=#{id0}
                    </if>
                    <if test="id1 != null and id1!=''" >
                        and id_1=#{id1}
                    </if>
                    <if test="id2 != null and id2!=''" >
                        and id_2=#{id2}
                    </if>
                    <if test="id3 != null and id3!=''" >
                        and id_3=#{id3}
                    </if>
                    <if test="id4 != null and id4!=''" >
                        and id_4=#{id4}
                    </if>
                    <if test="id5 != null and id5!=''" >
                        and id_5=#{id5}
                    </if>

                    <!--queryStr 自定义sql查询语句-->
                    <if test="queryStr != null and queryStr!=''" >
                        and ${queryStr}
                    </if>
                </where>
            </otherwise>
        </choose>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="String">
        delete from
        <include refid="tableName"></include>
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>



    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <update id="updateDisableByIds" parameterType="java.lang.String" >
        update <include refid="tableName" />
            set isdisable = 0
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <!-- 组织管理 分页List查询-->
    <sql id="Field1">
        <!--查询隐藏字段-->
        a.id id,
        a.pid pid,
        a.name_en nameEn,
        a.serial_number serialNumber,
        a.organize_type organizeType,

        a.company_type companyType,
        a.dept_type deptType,
        a.long_name longName,
        a.long_code longCode,

        DATE_FORMAT(a.cdate,'%Y-%m-%d %T') cdate,
        a.cuser cuser,
        a.uuser uuser,
        CASE
          WHEN a.isdisable = '0' THEN '已禁用'
          WHEN a.isdisable = '1' THEN '已启用'
        ELSE null
        END isdisableName,
        <!--查询显示字段-->
        a.code code,
        a.name name,
        c.name deptTypeName,
        a.layer layer,
        b.name parentName,

        DATE_FORMAT(a.udate,'%Y-%m-%d %T') udate,
        a.remark remark,
        a.isdisable isdisable
    </sql>
    <sql id="Column1">
        <!--查询隐藏字段-->
        'id' id_hide,
        'pid' pid_hide,
        'nameEn' nameEn_hide,
        'serialNumber' serialNumber_hide,
        'organizeType' organizeType_hide,

        'companyType' companyType_hide,
        'deptType' deptType_hide,
        'longName' longName_hide,
        'longCode' longCode_hide,

        'cdate' cdate_hide,
        'cuser' cuser_hide,
        'uuser' uuser_hide,
        'isdisableName' isdisableName_hide,
        <!--查询显示字段-->
        '组织编码' code,
        '组织名称' name,
        '组织类型' deptTypeName,
        '组织层级' layer,
        '上级组织' parentName,

        '更改时间' udate,
        '备注' remark,
        '是否启用' isdisable
    </sql>

    <select id="getColumnList"  resultType="java.util.LinkedHashMap">
        select
            <include refid="Column1"/>
        from dual
    </select>

    <select id="getDataListPage" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select <include refid="Field1"/>
        from vmes_department a
            left join vmes_department b on a.pid = b.id
            left join vmes_dictionary c on a.dept_type = c.id

        left join vmes_user cuser on a.cuser = cuser.id
        left join vmes_department dept on dept.id = cuser.dept_id

        <where>


            <if test='dataType != null and dataType == "0"'>
                and cuser.id = #{currentUserId}
            </if>
            <if test='dataType != null and dataType == "1"'>
                and dept.id_${deptLayer} = #{deptRId}
            </if>


            <if test="code != null and code != ''"><!-- 关键词检索 -->
                and a.code LIKE CONCAT(CONCAT('%', #{code}),'%')
            </if>
            <if test="name != null and name != ''"><!-- 关键词检索 -->
                and a.name LIKE CONCAT(CONCAT('%', #{name}),'%')
            </if>
            <if test="isdisable!= null and isdisable != ''"><!-- 关键词检索 -->
                and a.isdisable = #{isdisable}
            </if>
            <if test="pid!= null and pid != '' and layer == null"><!-- 关键词检索 -->
                and a.pid = #{pid}
            </if>
            <if test="pid!= null and pid != '' and layer != null"><!-- 关键词检索 -->
                and a.id_${layer} = #{pid}
            </if>
            <if test="organizeType != null and organizeType != ''"><!-- 关键词检索 -->
                and a.organize_type = #{organizeType}
            </if>

            <if test="deptTypeName != null and deptTypeName != ''" >
                and c.name  LIKE CONCAT(CONCAT('%', #{deptTypeName}),'%')
            </if>
            <if test="currentCompanyId != null and currentCompanyId != ''"><!-- 关键词检索 -->
                and (a.id_0 = #{currentCompanyId} or a.id_1 = #{currentCompanyId})
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
        </where>
        order by a.layer,a.serial_number,a.code asc
     </select>


    <!-- 自动创建，可以修改 -->
    <select id="getTreeList"  parameterType="com.yvan.PageData"  resultType="com.xy.vmes.entity.TreeEntity">
        select
        id,
        name,
        pid,
        serial_number serialNumber,
        dept_type type,
        layer,
        isdisable
        from <include refid="tableName"/>
        <where>
            <if test="name!= null and name != ''"><!-- 关键词检索 -->
                and name LIKE CONCAT(CONCAT('%', #{name}),'%')
            </if>
            <if test="code!= null and code != ''"><!-- 关键词检索 -->
                and code LIKE CONCAT(CONCAT('%', #{code}),'%')
            </if>
            <if test="pid!= null and pid != ''"><!-- 关键词检索 -->
                and pid = #{pid}
            </if>
            <if test="isdisable!= null and isdisable != ''"><!-- 关键词检索 -->
                and isdisable = #{isdisable}
            </if>

            <if test="currentCompanyId != null and currentCompanyId != ''">
                and (id_0 = #{currentCompanyId} or id_1 = #{currentCompanyId})
            </if>

            <if test="queryStr != null and queryStr!=''" ><!-- 自定义查询 -->
                and ${queryStr}
            </if>
        </where>
    </select>

    <insert id="insertColumn" >
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
        ('2836daa7a8cc11e884ad00163e105f05', 'department', 'code', '组织编码', 1, '1', '1', '1', '0', '2018-8-26 09:05:43', 'admin'),
        ('2836db4ea8cc11e884ad00163e105f05', 'department', 'name', '组织名称', 2, '1', '1', '1', '0', '2018-8-26 09:05:43', 'admin'),
        ('2836e4c5a8cc11e884ad00163e105f05', 'department', 'deptTypeName', '组织类型', 3, '1', '1', '1', '0', '2018-8-26 09:05:43', 'admin'),
        ('2836dd5ca8cc11e884ad00163e105f05', 'department', 'layer', '组织层级', 4, '1', '1', '1', '0', '2018-8-26 09:05:43', 'admin'),
        ('2836dcc8a8cc11e884ad00163e105f05', 'department', 'parentName', '上级组织', 5, '1', '1', '1', '0', '2018-8-26 09:05:43', 'admin'),
        ('2836e3f3a8cc11e884ad00163e105f05', 'department', 'udate', '修改时间', 6, '1', '1', '1', '0', '2018-8-26 09:05:43', 'admin'),
        ('2836e712a8cc11e884ad00163e105f05', 'department', 'remark', '备注', 7, '1', '1', '1', '0', '2018-8-26 09:05:43', 'admin'),
        ('2836e299a8cc11e884ad00163e105f05', 'department', 'isdisable', '是否启用', 8, '1', '1', '1', '0', '2018-8-26 09:05:43', 'admin'),
        ('2836e778a8cc11e884ad00163e105f05', 'department', 'id', 'id', 10, '1', '0', '1', '0', '2018-8-26 09:05:43', 'admin'),
        ('2836d747a8cc11e884ad00163e105f05', 'department', 'pid', '上级id', 11, '1', '0', '1', '0', '2018-8-26 09:05:43', 'admin'),
        ('2836e039a8cc11e884ad00163e105f05', 'department', 'deptType', '部门类型id', 12, '1', '0', '1', '0', '2018-8-26 09:05:43', 'admin'),
        ('2836de70a8cc11e884ad00163e105f05', 'department', 'organizeType', '组织类型', 13, '1', '0', '1', '0', '2018-8-26 09:05:43', 'admin'),
        ('2836ddc7a8cc11e884ad00163e105f05', 'department', 'serialNumber', '显示顺序', 14, '1', '0', '1', '0', '2018-8-26 09:05:43', 'admin'),
        ('2836e316a8cc11e884ad00163e105f05', 'department', 'cdate', '创建时间', 15, '1', '0', '1', '0', '2018-8-26 09:05:43', 'admin'),
        ('2836e382a8cc11e884ad00163e105f05', 'department', 'cuser', '创建人id', 16, '1', '0', '1', '0', '2018-8-26 09:05:43', 'admin'),
        ('2836e465a8cc11e884ad00163e105f05', 'department', 'uuser', '修改人id', 17, '1', '0', '1', '0', '2018-8-26 09:05:43', 'admin'),
        ('2836e109a8cc11e884ad00163e105f05', 'department', 'longCode', '组织长编码', 18, '1', '0', '1', '0', '2018-8-26 09:05:43', 'admin'),
        ('2836e09da8cc11e884ad00163e105f05', 'department', 'longName', '组织长名称', 19, '1', '0', '1', '0', '2018-8-26 09:05:43', 'admin')
    </insert>

    <select id="findDepartmentListByPathName" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            dept.id,dept.name,
            dept.id_0 did0,dept0.name dname0,
            dept.id_1 did1,dept1.name dname1,
            dept.id_2 did2,dept2.name dname2,
            dept.id_3 did3,dept3.name dname3,
            dept.id_4 did4,dept4.name dname4,
            dept.id_5 did5,dept5.name dname5,
            '' pathId,
            '' pathName
        from vmes_department dept
            left join vmes_department dept0 on dept.id_0 = dept0.id
            left join vmes_department dept1 on dept.id_1 = dept1.id
            left join vmes_department dept2 on dept.id_2 = dept2.id
            left join vmes_department dept3 on dept.id_3 = dept3.id
            left join vmes_department dept4 on dept.id_4 = dept4.id
            left join vmes_department dept5 on dept.id_5 = dept5.id
        <where>
            <if test="companyId != null and companyId != ''" >
                and dept.id_1 = #{companyId}
            </if>
            <if test="organizeType != null and organizeType!=''" >
                and dept.organize_type = #{organizeType}
            </if>
            <if test="queryStr != null and queryStr!=''" ><!-- 自定义查询 -->
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>



</mapper>