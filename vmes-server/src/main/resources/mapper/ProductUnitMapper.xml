<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：产品计价单位 Mapper.xml
创建人：刘威 自动创建
创建时间：2018-11-15
 -->
<mapper namespace="com.xy.vmes.deecoop.base.dao.ProductUnitMapper">

    <!--表名 自动创建，禁止修改-->
    <sql id="tableName">
	vmes_product_unit
    </sql>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">
        id id, <!-- id -->
        product_id productId,<!-- 产品(vmes_product.id) -->
        unit unit,<!-- 计价单位(字典表-vmes_dictionary.id) -->
        code code,<!-- 编码 -->
        name name,<!-- 名称 -->

        np_formula npFormula,<!-- 计量单位转换计价单位 -->
        pn_formula pnFormula,<!-- 计价单位转换计量单位 -->
        isdisable isdisable,<!-- 是否禁用(0:已禁用 1:启用) -->
        cdate cdate,<!-- 创建时间 -->
        cuser cuser,<!-- 创建人账号 -->

        udate udate,<!-- 修改时间 -->
        uuser uuser,<!-- 修改人账号 -->
        remark remark,<!-- 备注 -->
        product_price productPrice,
        type type,

        isdefault isdefault,
        n2p_is_scale n2pIsScale,
        n2p_decimal_count n2pDecimalCount,

        p2n_is_scale p2nIsScale,
        p2n_decimal_count p2nDecimalCount

    </sql>

    <!-- 字段值 自动创建，禁止修改-->
    <sql id="FieldValue">
        #{id}, <!-- id -->
        #{productId},<!-- 产品(vmes_product.id) -->
        #{unit},<!-- 计价单位(字典表-vmes_dictionary.id) -->
        #{code},<!-- 编码 -->
        #{name},<!-- 名称 -->

        #{npFormula},<!-- 计量单位转换计价单位 -->
        #{pnFormula},<!-- 计价单位转换计量单位 -->
        #{isdisable},<!-- 是否禁用(0:已禁用 1:启用) -->
        #{cdate},<!-- 创建时间 -->
        #{cuser},<!-- 创建人账号 -->

        #{udate},<!-- 修改时间 -->
        #{uuser},<!-- 修改人账号 -->
        #{remark},<!-- 备注 -->
        #{isdefault},
        #{type},
    </sql>


    <!-- 字段名称  '_hide' 表示前端列表隐藏 自动创建，禁止修改-->
    <sql id="Column">
        '产品(vmes_product.id)'  productId,
        '计价单位(字典表-vmes_dictionary.id)'  unit,
        '编码'  code,
        '名称'  name,
        '计量单位转换计价单位'  npFormula,
        '计价单位转换计量单位'  pnFormula,
        '是否禁用(0:已禁用 1:启用)'  isdisable,
        '创建时间'  cdate,
        '创建人账号'  cuser,
        '修改时间'  udate,
        '修改人账号'  uuser,
        '备注'  remark,
        '是否默认' isdefault,
        '是否计量单位' type,
        'id' id_hide
    </sql>

    <!-- 自动创建，禁止修改 -->
    <select id="findColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column"></include>
        from dual
    </select>

    <!-- 自动创建，禁止修改 -->
    <select id="findDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 列表 自动创建，禁止修改-->
    <select id="datalistPage" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.ProductUnit">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
        </where>
    </select>


    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from
        <include refid="tableName"></include>
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>


    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update
        <include refid="tableName"></include>
        set isdisable = '0' ,udate = now()
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
        #{item}
        </foreach>
    </update>



    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'ProductUnit' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'ProductUnit','productId','货品Id',1, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','code','货品编码',2, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','name','货品名称',3, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','type','单位类型',4, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','punit','单位Id',5, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','punitName','单位',6, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','productPrice','单价',7, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','npFormula','计量单位转换计价单位',8, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','pnFormula','计价单位转换计量单位',9, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','isdisable','是否启用',10, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','isdefault','是否默认',11, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','cdate','创建时间',13, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','cuser','创建人账号',14, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','udate','修改时间',15, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','uuser','修改人账号',16, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','remark','备注',17, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','id','id',0, '1','0','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''),'ProductUnit','n2pIsScale','计量转计价-是否需要四舍五入',18, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','n2pDecimalCount','计量转计价-保留小数位数',19, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','p2nIsScale','计价转计量-是否需要四舍五入',20, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','p2nDecimalCount','计价转计量-保留小数位数',21, '1','0','1','0',now(), 'admin'),

    </insert>


    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.ProductUnit">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
            <where>
                <!--isSelfExist 是否考虑自己在业务表中是否存在
                    false: (false or is null) 无需考虑自己在业务表中是否存在
                    true : 需要考虑自己在业务表中是否存在
                -->
                <if test="id != null and id != ''" >
                    <choose>
                        <when test="'true' == isSelfExist">
                            <![CDATA[ and id <> #{id} ]]>
                        </when>
                        <otherwise>
                            and id = #{id}
                        </otherwise>
                    </choose>
                </if>
                <if test="productQueryStr != null and productQueryStr != ''" >
                    and product_id in (${productQueryStr})
                </if>
                <if test="productId != null and productId != ''" >
                    and product_id = #{productId}
                </if>
                <if test="unit != null and unit != ''" >
                    and unit = #{unit}
                </if>
                <if test="type != null and type != ''" >
                    and type = #{type}
                </if>
                <if test="isdefault != null and isdefault != ''" >
                    and isdefault = #{isdefault}
                </if>

                <if test="productPrice != null and productPrice != ''" >
                    and product_price = ${productPrice}
                </if>
                <if test="isdisable != null and isdisable != ''" >
                    and isdisable = #{isdisable}
                </if>

                <!--queryStr 自定义sql查询语句-->
                <if test="queryStr != null and queryStr != ''" >
                    and ${queryStr}
                </if>
            </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>




    <!-- 字段 自动创建，可以修改-->
    <sql id="Field1">
        pu.product_id productId,<!-- 产品(vmes_product.id) -->
        pu.unit punit,<!-- 计价单位(字典表-vmes_dictionary.id) -->
        punit.name punitName,
        product.code code,<!-- 编码 -->
        product.name name,<!-- 名称 -->
        pu.np_formula npFormula,<!-- 计量单位转换计价单位 -->
        pu.pn_formula pnFormula,<!-- 计价单位转换计量单位 -->
        pu.isdisable isdisable,<!-- 是否禁用(0:已禁用 1:启用) -->
        pu.cdate cdate,<!-- 创建时间 -->
        pu.cuser cuser,<!-- 创建人账号 -->
        pu.udate udate,<!-- 修改时间 -->
        pu.uuser uuser,<!-- 修改人账号 -->
        pu.remark remark,<!-- 备注 -->
        pu.id id, <!-- id -->
        pu.isdefault isdefault,
        case when pu.type=0 then '计价单位' when pu.type=1 then '计量单位' else null end type,
        round(ifnull(pu.product_price, 0), 2) productPrice
    </sql>

    <!-- 字段值 自动创建，可以修改-->
    <!--
    <sql id="Column1">
            '产品(vmes_product.id)'  productId,
            '计价单位(字典表-vmes_dictionary.id)'  unit,
            '编码'  code,
            '名称'  name,
            '计量单位转换计价单位'  npFormula,
            '计价单位转换计量单位'  pnFormula,
            '是否禁用(0:已禁用 1:启用)'  isdisable,
            '创建时间'  cdate,
            '创建人账号'  cuser,
            '修改时间'  udate,
            '修改人账号'  uuser,
            '备注'  remark,
            'id' id_hide
    </sql>
     -->

    <!-- 自动创建，可以修改 -->
    <!--
    <select id="getColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column1"></include>
        from dual
    </select>
    -->

    <!-- 自动创建，可以修改 -->
    <select id="getDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field1"></include>
        from
        vmes_product_unit pu
        left join vmes_product product on product.id = pu.product_id
        left join vmes_dictionary punit on pu.unit = punit.id
        <where>
            <if test="productId != null and productId != ''">
                and pu.product_id = #{productId}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            pu.product_id productId,
            pu.unit punit,
            punit.name punitName,
            product.code code,
            product.name name,
            pu.np_formula npFormula,
            pu.pn_formula pnFormula,
            pu.isdisable isdisable,
            pu.cdate cdate,
            pu.cuser cuser,
            pu.udate udate,
            pu.uuser uuser,
            pu.remark remark,
            pu.id id,
            pu.isdefault isdefault,

            case when pu.type=0 then '计价单位' when pu.type=1 then '计量单位' else null end type,
            round(ifnull(pu.product_price, 0), 4) productPrice,

            pu.n2p_is_scale n2pIsScale,
            pu.n2p_decimal_count n2pDecimalCount,

            pu.p2n_is_scale p2nIsScale,
            pu.p2n_decimal_count p2nDecimalCount
        from
        vmes_product_unit pu
        left join vmes_product product on pu.product_id = product.id
        left join vmes_dictionary punit on pu.unit = punit.id
        <where>

            <if test="productId != null and productId != ''">
                and pu.product_id = #{productId}
            </if>
            <if test="productUnitType != null and productUnitType != ''">
                and pu.type = #{productUnitType}
            </if>
            <if test="productUnitIsdefault != null and productUnitIsdefault != ''">
                and pu.isdefault = #{productUnitIsdefault}
            </if>

            <if test="productUnitIsdisable != null and productUnitIsdisable != ''">
                and pu.isdisable = #{productUnitIsdisable}
            </if>

            <if test="companyId != null and companyId != ''" >
                and product.company_id=#{companyId}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，禁止修改-->
    <update id="updateToNotDefaultByPorId" parameterType="java.lang.String" >
        update
        <include refid="tableName"></include>
        set isdefault = '0' ,udate = now()
        where
        product_id  = #{productId}
    </update>

    <update id="updateTypeByProductUnit" parameterType="com.yvan.PageData">
        update vmes_product_unit set type = #{type}
        <where>
            <if test="productId != null and productId != ''" >
                and product_id = #{productId}
            </if>
        </where>
    </update>


</mapper>