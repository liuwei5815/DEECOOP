<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_menu_button:菜单按钮表 Mapper.xml
创建人：陈刚 自动创建
创建时间：2018-08-03
 -->
<mapper namespace="com.xy.vmes.deecoop.system.dao.MenuButtonMapper">

    <!--表名 自动创建，禁止修改-->
    <sql id="tableName">
	vmes_menu_button
    </sql>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">
		company_id companyId,<!-- 公司ID-组织架构 -->
		menu_id menuId,<!-- 菜单表ID -->
		code code,<!-- 按钮编码 -->
        value value,<!-- 按钮属性值 -->
        name name,<!-- 按钮名称 -->

        serial_number serialNumber,<!--按钮顺序-->
		name_en nameEn,<!-- 英文名称 -->
		isdisable isdisable,<!-- 是否禁用(1:已禁用 0:启用) 数据字典:sys_isdisable -->
		cdate cdate,<!-- 创建时间 -->
		cuser cuser,<!-- 创建人账号 -->

        udate udate,<!-- 修改时间 -->
        uuser uuser,<!-- 修改人账号 -->
		id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，禁止修改-->
    <sql id="FieldValue">
		#{companyId},<!-- 公司ID-组织架构 -->
		#{menuId},<!-- 菜单表ID -->
		#{code},<!-- 按钮编码 -->
        #{value},<!-- 按钮属性值 -->
        #{name},<!-- 按钮名称 -->

        #{nameEn},<!-- 英文名称 -->
        #{serialNumber},
        #{isdisable},<!-- 是否禁用(1:已禁用 0:启用) 数据字典:sys_isdisable -->
		#{cdate},<!-- 创建时间 -->
		#{cuser},<!-- 创建人账号 -->

        #{udate},<!-- 修改时间 -->
        #{uuser},<!-- 修改人账号 -->
		#{id} <!-- id -->
    </sql>


    <!-- 字段值 自动创建，禁止修改-->
    <sql id="Column">
        '公司ID-组织架构'  companyId,
        '菜单表ID'  menuId,
        '按钮编码(按钮属性值)'  code,
        '按钮名称'  name,
        '英文名称'  nameEn,
        '是否禁用(1:已禁用 0:启用) 数据字典:sys_isdisable'  isdisable,
        '创建时间'  cdate,
        '创建人账号'  cuser,
        '修改时间'  udate,
        '修改人账号'  uuser,
        'id' id
    </sql>

    <!-- 自动创建，禁止修改 -->
    <select id="findColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column"></include>
        from dual
    </select>

    <!-- 自动创建，禁止修改 -->
    <select id="findDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
            <if test="keywords!= null and keywords != ''"><!-- 关键词检索 -->
                and
                (
                <!--	根据需求自己加检索条件
                            字段1 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                             or
                            字段2 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                        -->
                )
            </if>
        </where>
    </select>

    <!-- 列表 自动创建，禁止修改-->
    <select id="dataListPage" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.MenuButton">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
            <if test="keywords!= null and keywords != ''"><!-- 关键词检索 -->
                and
                (
                <!--	根据需求自己加检索条件
                            字段1 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                             or
                            字段2 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                        -->
                )
            </if>
        </where>
    </select>

    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.MenuButton">
        select
            <include refid="Field"></include>
        from
            <include refid="tableName"></include>
        <choose>
            <!--
                mapSize (0 or is null) 无查询参数-业务层传入
                isQueryAll 是否查询全部
                fasle: (false or is null) 无查询条件-查询结果集返回空或list.size()==0
                true : 无查询条件-返回全部业务表数据
            -->
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <!--isSelfExist 是否考虑自己在业务表中是否存在
                        false: (false or is null) 无需考虑自己在业务表中是否存在
                        true : 需要考虑自己在业务表中是否存在
                    -->
                    <if test="id != null and id!=''" >
                        <choose>
                            <when test="'true' == isSelfExist">
                                <![CDATA[ and id <> #{id} ]]>
                            </when>
                            <otherwise>
                                and id = #{id}
                            </otherwise>
                        </choose>
                    </if>
                    <if test="menuId != null and menuId != ''" >
                        and menu_id = #{menuId}
                    </if>
                    <if test="name != null and name != ''" >
                        and name = #{name}
                    </if>
                    <if test="nameEn != null and nameEn != ''" >
                        and name_en = #{nameEn}
                    </if>

                    <if test="code != null and code != ''" >
                        and code = #{code}
                    </if>
                    <if test="value != null and value != ''" >
                        and value = #{value}
                    </if>
                    <if test="isdisable != null and isdisable != ''" >
                        and isdisable = #{isdisable}
                    </if>


                    <!--queryStr 自定义sql查询语句-->
                    <if test="queryStr != null and queryStr!=''" >
                        and ${queryStr}
                    </if>
                </where>
            </otherwise>
        </choose>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from
        <include refid="tableName"></include>
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>



    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <!-- 菜单按钮分页查询List-->
    <sql id="Column1">
        <!--查询隐藏字段-->
        'id' id_hide,
        'companyId' companyId_hide,
        'code' code_hide,
        'menuId' menuId_hide,
        'isdisable' isdisable_hide,

        'cdate' cdate_hide,
        'cuser' cuser_hide,
        'udate' udate_hide,
        'uuser' uuser_hide,
        <!--查询显示字段-->
        '按钮属性值' value,
        '按钮名称' name,
        '英文名' nameEn,
        '显示顺序' serialNumber,
        '状态' isdisableName
    </sql>



    <insert id="insertColumn" >
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
        (replace(uuid(), '-', ''),'button','companyId','companyId',1, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'button','isdisable','是否启用',2, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'button','cdate','创建时间',3, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'button','udate','修改时间',4, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'button','cuser','创建人',5, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'button','uuser','修改人',6, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'button','code','code',7, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'button','menuId','menuId',8, '1','0','1','0',now(), 'admin'),

        (replace(uuid(), '-', ''),'button','value','按钮属性值',9, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'button','name','按钮名称',10, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'button','nameEn','英文名',11, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'button','serialNumber','显示顺序',12, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'button','isdisableName','状态',13, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'button','id','id',0, '1','0','1','0',now(), 'admin')
    </insert>


    <select id="getColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column1"></include>
        from dual
    </select>

    <sql id="Field1">
        <!--查询隐藏字段-->
        id id,
        company_id companyId,
        code code,
        menu_id menuId,
        DATE_FORMAT(cdate,'%Y-%m-%d %T') cdate,
        cuser cuser,
        DATE_FORMAT(udate,'%Y-%m-%d %T') udate,
        uuser uuser,
        <!--查询显示字段-->
        value value,
        name name,
        name_en nameEn,
        serial_number serialNumber,
        isdisable isdisable

    </sql>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field1"></include>
        from
        <include refid="tableName"></include>
        <where>
            <if test="menuId != null and menuId != ''" >
                and menu_id = #{menuId}
            </if>
            <if test="isdisable != null and isdisable != ''" >
                and isdisable = #{isdisable}
            </if>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>

        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update
        <include refid="tableName"></include>
        set isdisable = 0 ,udate = now()
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
        #{item}
        </foreach>
    </update>

    <!-- 通过menuId删除菜单按钮信息 -->
    <delete id="deleteMenuButtonByMenuId" parameterType="java.lang.String">
        delete from
        <include refid="tableName"/>
        where
        menu_id = #{menuId}
    </delete>

    <update id="updateDisableByMenuId" parameterType="java.lang.String" >
        update <include refid="tableName" />
        set isdisable = 0
        where
        menu_id = #{menuId}
    </update>


</mapper>