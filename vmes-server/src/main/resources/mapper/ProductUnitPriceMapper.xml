<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_product_unit_price:货品价格 Mapper.xml
创建人：陈刚 自动创建
创建时间：2018-12-04
 -->
<mapper namespace="com.xy.vmes.deecoop.base.dao.ProductUnitPriceMapper">
    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from vmes_product_unit_price
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>


    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update vmes_product_unit_price
        set isdisable = '0' ,udate = now()
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'ProductUnitPrice' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'productUnitPrice','productId','货品ID',1, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'productUnitPrice','priceUnit','计价单位ID',2, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'productUnitPrice','productPrice','货品单价',3, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'productUnitPrice','remark','备注',4, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'productUnitPrice','cuser','创建用户id',5, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'productUnitPrice','cdate','创建时间',6, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'productUnitPrice','uuser','修改用户id',7, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'productUnitPrice','udate','修改时间',8, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'productUnitPrice','isdisable','是否启用(0:已禁用 1:启用)',9, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'productUnitPrice','id','id',0, '1','1','1','0',now(), 'admin')
    </insert>

    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.ProductUnitPrice">
        select
            id id,
            product_id productId,
            price_unit priceUnit,
            product_price productPrice,
            remark remark,

            cuser cuser,
            cdate cdate,
            uuser uuser,
            udate udate,
            isdisable isdisable
        from vmes_product_unit_price
        <where>
            <!--isSelfExist 是否考虑自己在业务表中是否存在
                false: (false or is null) 无需考虑自己在业务表中是否存在
                true : 需要考虑自己在业务表中是否存在
            -->
            <if test="id != null and id != ''" >
                <choose>
                    <when test="'true' == isSelfExist">
                        <![CDATA[ and id <> #{id} ]]>
                    </when>
                    <otherwise>
                        and id = #{id}
                    </otherwise>
                </choose>
            </if>


            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
            prodPrice.id id,
            prodPrice.product_id productId,
            prodPrice.price_unit priceUnit,
            priceUnit.name priceUnitName,
            round(ifnull(prodPrice.product_price, 0), 2) productPrice,
            prodPrice.remark remark,

            prodPrice.cuser cuser,
            DATE_FORMAT(prodPrice.cdate,'%Y-%m-%d %T') cdate,
            prodPrice.uuser uuser,
            DATE_FORMAT(prodPrice.udate,'%Y-%m-%d %T') udate,
            prodPrice.isdisable isdisable,

            prod.name prodName,
            produnit.unit prodUnit,
            unit.name prodUnitName
        from vmes_product_unit_price prodPrice
            left join vmes_product prod on prodPrice.product_id = prod.id
            left join vmes_product_unit produnit on produnit.product_id = prod.id and produnit.type = 1
            left join vmes_dictionary unit on produnit.unit = unit.id
            left join vmes_dictionary priceUnit on prodPrice.price_unit = priceUnit.id
        <where>
            <if test="productId != null and productId != ''">
                and prodPrice.product_id = #{productId}
            </if>
            <if test="isdisable != null and isdisable != ''">
                and prodPrice.isdisable = #{isdisable}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>

        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

</mapper>