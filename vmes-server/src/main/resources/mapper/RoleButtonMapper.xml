<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_role_button:角色按钮 Mapper.xml
创建人：陈刚 自动创建
创建时间：2018-07-30
 -->
<mapper namespace="com.xy.vmes.deecoop.system.dao.RoleButtonMapper">

    <!--表名 自动创建，禁止修改-->
    <sql id="tableName">
	vmes_role_button
    </sql>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">
		role_id roleId,<!-- 角色ID -->
		button_id buttonId,<!-- 按钮ID -->
		isdisable isdisable,<!-- 是否禁用(1:已禁用 0:启用) 数据字典:sys_isdisable -->
		cdate cdate,<!-- 创建时间 -->
		cuser cuser,<!-- 创建人账号 -->
		udate udate,<!-- 修改时间 -->
		uuser uuser,<!-- 修改人账号 -->
		id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，禁止修改-->
    <sql id="FieldValue">
		#{roleId},<!-- 角色ID -->
		#{buttonId},<!-- 按钮ID -->
		#{isdisable},<!-- 是否禁用(1:已禁用 0:启用) 数据字典:sys_isdisable -->
		#{cdate},<!-- 创建时间 -->
		#{cuser},<!-- 创建人账号 -->
		#{udate},<!-- 修改时间 -->
		#{uuser},<!-- 修改人账号 -->
		#{id} <!-- id -->
    </sql>


    <!-- 字段值 自动创建，禁止修改-->
    <sql id="Column">
        '角色ID'  roleId,
        '按钮ID'  buttonId,
        '是否禁用(1:已禁用 0:启用) 数据字典:sys_isdisable'  isdisable,
        '创建时间'  cdate,
        '创建人账号'  cuser,
        '修改时间'  udate,
        '修改人账号'  uuser,
        'id' id
    </sql>

    <!-- 自动创建，禁止修改 -->
    <select id="findColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column"></include>
        from dual
    </select>

    <!-- 自动创建，禁止修改 -->
    <select id="findDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
            <if test="keywords!= null and keywords != ''"><!-- 关键词检索 -->
                and
                (
                <!--	根据需求自己加检索条件
                            字段1 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                             or
                            字段2 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                        -->
                )
            </if>
        </where>
    </select>

    <!-- 列表 自动创建，禁止修改-->
    <select id="dataListPage" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.RoleButton">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
            <if test="keywords!= null and keywords != ''"><!-- 关键词检索 -->
                and
                (
                <!--	根据需求自己加检索条件
                            字段1 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                             or
                            字段2 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                        -->
                )
            </if>
        </where>
    </select>

    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.RoleButton">
        select
            a.role_id roleId,
            a.button_id buttonId,
            a.isdisable isdisable,
            a.cdate cdate,
            a.cuser cuser,
            a.udate udate,
            a.uuser uuser,
            a.id id
        from vmes_role_button a
            left join vmes_menu_button b on a.button_id = b.id
        <choose>
            <!--
                mapSize (0 or is null) 无查询参数-业务层传入
                isQueryAll 是否查询全部
                fasle: (false or is null) 无查询条件-查询结果集返回空或list.size()==0
                true : 无查询条件-返回全部业务表数据
            -->
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <!--isSelfExist 是否考虑自己在业务表中是否存在
                        false: (false or is null) 无需考虑自己在业务表中是否存在
                        true : 需要考虑自己在业务表中是否存在
                    -->
                    <if test="id != null and id != ''" >
                        <choose>
                            <when test="'true' == isSelfExist">
                                <![CDATA[ and a.id <> #{id} ]]>
                            </when>
                            <otherwise>
                                and a.id = #{id}
                            </otherwise>
                        </choose>
                    </if>
                    <if test="buttonId != null and buttonId != ''" >
                        and a.button_id = #{buttonId}
                    </if>
                    <if test="roleId != null and roleId != ''" >
                        and a.role_id = #{roleId}
                    </if>
                    <if test="isdisable != null and isdisable != ''" >
                        and a.isdisable = #{isdisable}
                    </if>
                    <if test="menuId != null and menuId != ''" >
                        and b.menu_id = #{menuId}
                    </if>

                    <!--queryStr 自定义sql查询语句-->
                    <if test="queryStr != null and queryStr!=''" >
                        and ${queryStr}
                    </if>
                </where>
            </otherwise>
        </choose>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from
        <include refid="tableName"></include>
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>



    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <update id="updateDisableByRoleId" parameterType="java.lang.String" >
        update <include refid="tableName" />
        set isdisable = 0
        where
        role_id = #{roleId}
    </update>

    <!--获取全部菜单按钮-根据角色ID-->
    <select id="listMenuButtonMapByRole" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            a.id id,
            a.company_id companyId,
            a.menu_id menuId,
            a.code code,
            a.value value,

            a.name name,
            a.serial_number serialNumber,
            a.name_en nameEn,
            a.isdisable buttonIsdisable,
            a.cdate cdate,

            a.cuser cuser,
            a.udate udate,
            a.uuser uuser,

            b.button_id as buttonId,
            b.role_id as roleId,
            b.isdisable as isdisable
        from vmes_menu_button a
            left join vmes_role_button b on a.id = b.button_id
        <!--queryRoleIds 自定义sql查询语句 b.role_id in ()-->
        <if test="queryRoleIds != null and queryRoleIds != ''" >
            and ${queryRoleIds}
        </if>
        <where>

            <if test="menuId != null and menuId != ''" >
                and a.menu_id = #{menuId}
            </if>
            <!--queryStr 自定义sql查询语句 b.role_id in ()-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
            <if test="buttonIsdisable != null and buttonIsdisable != ''" >
                and a.isdisable = #{buttonIsdisable}
            </if>
            <if test="isdisable != null and isdisable != ''" >
                and b.isdisable = #{isdisable}
            </if>
        </where>
    </select>


</mapper>