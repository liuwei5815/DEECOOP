<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_coderule:系统编码规则表 Mapper.xml
创建人：陈刚 自动创建
创建时间：2018-07-26
 -->
<mapper namespace="com.xy.vmes.deecoop.system.dao.CoderuleMapper">

    <!--表名 自动创建，禁止修改-->
    <sql id="tableName">
	vmes_coderule
    </sql>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">
		company_id companyId,<!-- 公司ID-组织架构 -->
		table_name tableName,<!-- 业务名称 (表名) -->
		code code,<!-- 当前使用Code (前补零) -->
		business_code businessCode,<!-- 业务编码 -->
		type type,<!-- 计划信息表produce_workflow -->
		cdate cdate,<!-- 创建时间 -->
		udate udate,<!-- 修改时间 -->
		version version,<!-- mysql乐观锁 -->
		id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，禁止修改-->
    <sql id="FieldValue">
		#{companyId},<!-- 公司ID-组织架构 -->
		#{tableName},<!-- 业务名称 (表名) -->
		#{code},<!-- 当前使用Code (前补零) -->
		#{businessCode},<!-- 业务编码 -->
		#{type},<!-- 计划信息表produce_workflow -->
		#{cdate},<!-- 创建时间 -->
		#{udate},<!-- 修改时间 -->
		#{version},<!-- mysql乐观锁 -->
		#{id} <!-- id -->
    </sql>


    <!-- 字段值 自动创建，禁止修改-->
    <sql id="Column">
        '公司ID-组织架构'  companyId,
        '业务名称 (表名)'  tableName,
        '当前使用Code (前补零)'  code,
        '业务编码'  businessCode,
        '计划信息表produce_workflow'  type,
        '创建时间'  cdate,
        '修改时间'  udate,
        'mysql乐观锁'  version,
        'id' id
    </sql>

    <!-- 自动创建，禁止修改 -->
    <select id="findColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column"></include>
        from dual
    </select>

    <!-- 自动创建，禁止修改 -->
    <select id="findDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
            <include refid="Field"></include>
        from
            <include refid="tableName"></include>
        <choose>
            <!--
                mapSize (0 or is null) 无查询参数-业务层传入
                isQueryAll 是否查询全部
                fasle: (false or is null) 无查询条件-查询结果集返回空或list.size()==0
                true : 无查询条件-返回全部业务表数据
            -->
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <!--isSelfExist 是否考虑自己在业务表中是否存在
                        false: (false or is null) 无需考虑自己在业务表中是否存在
                        true : 需要考虑自己在业务表中是否存在
                    -->
                    <if test="id != null and id!=''" >
                        <choose>
                            <when test="'true' == isSelfExist">
                                <![CDATA[ and id <> #{id} ]]>
                            </when>
                            <otherwise>
                                and id = #{id}
                            </otherwise>
                        </choose>
                    </if>

                    <if test="companyId != null and companyId != ''" >
                        and company_id = #{companyId}
                    </if>
                    <if test="tableName != null and tableName != ''" >
                        and table_name = #{tableName}
                    </if>
                    <if test="type != null and type != ''" >
                        and type = #{type}
                    </if>

                    <!--queryStr 自定义sql查询语句-->
                    <if test="queryStr != null and queryStr!=''" >
                        and ${queryStr}
                    </if>
                </where>
            </otherwise>
        </choose>
    </select>

    <!-- 列表 自动创建，禁止修改-->
    <select id="datalistPage" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.Coderule">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <if test="PageData!= null"><!-- 关键词检索 -->
            where 1=1
            <if test="keywords!= null and keywords != ''"><!-- 关键词检索 -->
                and
                (
                <!--	根据需求自己加检索条件
						字段1 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
						 or
						字段2 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
					-->
                )
            </if>
        </if>
    </select>

    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.Coderule">
        select
            <include refid="Field"></include>
        from
            <include refid="tableName"></include>
        <choose>
            <!--
                mapSize (0 or is null) 无查询参数-业务层传入
                isQueryAll 是否查询全部
                fasle: (false or is null) 无查询条件-查询结果集返回空或list.size()==0
                true : 无查询条件-返回全部业务表数据
            -->
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <!--isSelfExist 是否考虑自己在业务表中是否存在
                        false: (false or is null) 无需考虑自己在业务表中是否存在
                        true : 需要考虑自己在业务表中是否存在
                    -->
                    <if test="id != null and id!=''" >
                        <choose>
                            <when test="'true' == isSelfExist">
                                <![CDATA[ and id <> #{id} ]]>
                            </when>
                            <otherwise>
                                and id = #{id}
                            </otherwise>
                        </choose>
                    </if>

                    <if test="companyId != null and companyId != ''" >
                        and company_id = #{companyId}
                    </if>
                    <if test="tableName != null and tableName != ''" >
                        and table_name = #{tableName}
                    </if>
                    <if test="type != null and type != ''" >
                        and type = #{type}
                    </if>

                    <!--queryStr 自定义sql查询语句-->
                    <if test="queryStr != null and queryStr!=''" >
                        and ${queryStr}
                    </if>
                </where>
            </otherwise>
        </choose>
    </select>

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="String">
        delete from
        <include refid="tableName"></include>
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>



    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <!--并发(version)控制_乐观锁-->
    <update id="updateCoderule" parameterType="com.yvan.PageData">
        <![CDATA[
            update vmes_coderule set
                code = #{code},
                business_code = #{businessCode},
                udate = #{udate},
                version = version + 1
            where id = #{id} and version = #{version}
        ]]>
    </update>


</mapper>