<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_shop_user:商城平台用户管理 Mapper.xml
创建人：刘威 自动创建
创建时间：2019-12-23
 -->
<mapper namespace="com.xy.vmes.deecoop.shop.dao.ShopUserMapper">

    <!--表名 自动创建，禁止修改-->
    <sql id="tableName">
	vmes_shop_user
    </sql>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">
		username username,<!-- 用户账号 -->
		nike_name nikeName,<!-- 昵称 -->
		password password,<!-- 用户密码 -->
		paypassword paypassword,<!-- 支付密码 -->
		mobile mobile,<!-- 手机号码 -->
		email email,<!-- 邮箱 -->
		sex sex,<!-- 性别::0:男，1:女 -->
		card card,<!-- 身份证号 -->
		amount amount,<!-- 用户余额 -->
		monthly_income monthlyIncome,<!-- 月收入 -->
		user_image userImage,<!-- 用户头像 -->
		birthday birthday,<!-- 出生年月 -->
		create_type createType,<!-- 注册方式 -->
		address address,<!-- 居住地址 -->
		detail_address detailAddress,<!-- 详细地址 -->
		member_ugrade memberUgrade,<!-- 会员等级 -->
		member_type memberType,<!-- 用户类型 1：普通用户，2：活动会员,3：月卡会员 4:季卡会员 5：年卡会员 -->
		last_login_date lastLoginDate,<!-- 最后登陆日期 -->
		company_id companyId,<!-- 公司ID-组织架构 -->
		wechat_img wechatImg,<!-- 微信头像 -->
		wechat_nickname wechatNickname,<!-- 微信昵称 -->
		wx_openid wxOpenid,<!-- websocket的会话id -->
		wx_unionid wxUnionid,<!-- 微信登录唯一编号 -->
		isdisable isdisable,<!-- 是否启用 -->
		cdate cdate,<!-- 创建时间 -->
		cuser cuser,<!-- 创建人账号 -->
		udate udate,<!-- 修改时间 -->
		uuser uuser,<!-- 修改人账号 -->
		remark remark,<!-- 备注 -->
		id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，禁止修改-->
    <sql id="FieldValue">
		#{username},<!-- 用户账号 -->
		#{nikeName},<!-- 昵称 -->
		#{password},<!-- 用户密码 -->
		#{paypassword},<!-- 支付密码 -->
		#{mobile},<!-- 手机号码 -->
		#{email},<!-- 邮箱 -->
		#{sex},<!-- 性别::0:男，1:女 -->
		#{card},<!-- 身份证号 -->
		#{amount},<!-- 用户余额 -->
		#{monthlyIncome},<!-- 月收入 -->
		#{userImage},<!-- 用户头像 -->
		#{birthday},<!-- 出生年月 -->
		#{createType},<!-- 注册方式 -->
		#{address},<!-- 居住地址 -->
		#{detailAddress},<!-- 详细地址 -->
		#{memberUgrade},<!-- 会员等级 -->
		#{memberType},<!-- 用户类型 1：普通用户，2：活动会员,3：月卡会员 4:季卡会员 5：年卡会员 -->
		#{lastLoginDate},<!-- 最后登陆日期 -->
		#{companyId},<!-- 公司ID-组织架构 -->
		#{wechatImg},<!-- 微信头像 -->
		#{wechatNickname},<!-- 微信昵称 -->
		#{wxOpenid},<!-- websocket的会话id -->
		#{wxUnionid},<!-- 微信登录唯一编号 -->
		#{isdisable},<!-- 是否启用 -->
		#{cdate},<!-- 创建时间 -->
		#{cuser},<!-- 创建人账号 -->
		#{udate},<!-- 修改时间 -->
		#{uuser},<!-- 修改人账号 -->
		#{remark},<!-- 备注 -->
		#{id} <!-- id -->
    </sql>


    <!-- 字段名称  自动创建，禁止修改-->
    <sql id="Column">
        '用户账号'  username,
        '昵称'  nikeName,
        '用户密码'  password,
        '支付密码'  paypassword,
        '手机号码'  mobile,
        '邮箱'  email,
        '性别::0:男，1:女'  sex,
        '身份证号'  card,
        '用户余额'  amount,
        '月收入'  monthlyIncome,
        '用户头像'  userImage,
        '出生年月'  birthday,
        '注册方式'  createType,
        '居住地址'  address,
        '详细地址'  detailAddress,
        '会员等级'  memberUgrade,
        '用户类型 1：普通用户，2：活动会员,3：月卡会员 4:季卡会员 5：年卡会员'  memberType,
        '最后登陆日期'  lastLoginDate,
        '公司ID-组织架构'  companyId,
        '微信头像'  wechatImg,
        '微信昵称'  wechatNickname,
        'websocket的会话id'  wxOpenid,
        '微信登录唯一编号'  wxUnionid,
        '是否启用'  isdisable,
        '创建时间'  cdate,
        '创建人账号'  cuser,
        '修改时间'  udate,
        '修改人账号'  uuser,
        '备注'  remark,
        'id' id
    </sql>

    <!-- 自动创建，禁止修改 -->
    <select id="findColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column"></include>
        from dual
    </select>

    <!-- 自动创建，禁止修改 -->
    <select id="findDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr!=""' >
                and ${queryStr}
            </if>
        </where>
        <if test='orderStr != null and orderStr != ""' >
            order by ${orderStr}
        </if>
    </select>

    <!-- 列表 自动创建，禁止修改-->
    <select id="datalistPage" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.ShopUser">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr!=""' >
                and ${queryStr}
            </if>
        </where>
    </select>


    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from
        <include refid="tableName"></include>
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>


    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update
        <include refid="tableName"></include>
        set isdisable = '0' ,udate = now()
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
        #{item}
        </foreach>
    </update>

    <!-- 自动创建，禁止修改-->
    <update id="updateByDefined" parameterType="com.yvan.PageData" >
        update
        <include refid="tableName"></include>
        set  ${updateStr} ,udate = now()
        where
        ${queryStr}
    </update>


    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'ShopUser' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'ShopUser','username','用户账号',1, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','nikeName','昵称',2, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','password','用户密码',3, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','paypassword','支付密码',4, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','mobile','手机号码',5, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','email','邮箱',6, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','sex','性别::0:男，1:女',7, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','card','身份证号',8, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','amount','用户余额',9, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','monthlyIncome','月收入',10, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','userImage','用户头像',11, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','birthday','出生年月',12, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','createType','注册方式',13, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','address','居住地址',14, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','detailAddress','详细地址',15, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','memberUgrade','会员等级',16, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','memberType','用户类型 1：普通用户，2：活动会员,3：月卡会员 4:季卡会员 5：年卡会员',17, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','lastLoginDate','最后登陆日期',18, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','companyId','公司ID-组织架构',19, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','wechatImg','微信头像',20, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','wechatNickname','微信昵称',21, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','wxOpenid','websocket的会话id',22, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','wxUnionid','微信登录唯一编号',23, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','isdisable','是否启用',24, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','cdate','创建时间',25, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','cuser','创建人账号',26, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','udate','修改时间',27, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','uuser','修改人账号',28, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','remark','备注',29, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ShopUser','id','id',0, '1','1','1','0',now(), 'admin')
    </insert>


    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.ShopUser">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--isSelfExist 是否考虑自己在业务表中是否存在
                false: (false or is null) 无需考虑自己在业务表中是否存在
                true : 需要考虑自己在业务表中是否存在
            -->
            <if test='id != null and id != ""' >
                <choose>
                    <when test="'true' == isSelfExist">
                        <![CDATA[ and id <> #{id} ]]>
                    </when>
                    <otherwise>
                        and id = #{id}
                    </otherwise>
                </choose>
            </if>


            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr != ""'>
                and ${queryStr}
            </if>
        </where>
        <if test='orderStr != null and orderStr != ""' >
            order by ${orderStr}
        </if>
    </select>




    <!-- 字段 自动创建，可以修改-->
    <sql id="Field1">
        username username,<!-- 用户账号 -->
        nike_name nikeName,<!-- 昵称 -->
        password password,<!-- 用户密码 -->
        paypassword paypassword,<!-- 支付密码 -->
        mobile mobile,<!-- 手机号码 -->
        email email,<!-- 邮箱 -->
        sex sex,<!-- 性别::0:男，1:女 -->
        card card,<!-- 身份证号 -->
        amount amount,<!-- 用户余额 -->
        monthly_income monthlyIncome,<!-- 月收入 -->
        user_image userImage,<!-- 用户头像 -->
        birthday birthday,<!-- 出生年月 -->
        create_type createType,<!-- 注册方式 -->
        address address,<!-- 居住地址 -->
        detail_address detailAddress,<!-- 详细地址 -->
        member_ugrade memberUgrade,<!-- 会员等级 -->
        member_type memberType,<!-- 用户类型 1：普通用户，2：活动会员,3：月卡会员 4:季卡会员 5：年卡会员 -->
        last_login_date lastLoginDate,<!-- 最后登陆日期 -->
        company_id companyId,<!-- 公司ID-组织架构 -->
        wechat_img wechatImg,<!-- 微信头像 -->
        wechat_nickname wechatNickname,<!-- 微信昵称 -->
        wx_openid wxOpenid,<!-- websocket的会话id -->
        wx_unionid wxUnionid,<!-- 微信登录唯一编号 -->
        isdisable isdisable,<!-- 是否启用 -->
        cdate cdate,<!-- 创建时间 -->
        cuser cuser,<!-- 创建人账号 -->
        udate udate,<!-- 修改时间 -->
        uuser uuser,<!-- 修改人账号 -->
        remark remark,<!-- 备注 -->
        id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，可以修改-->
    <!--
    <sql id="Column1">
            '用户账号'  username,
            '昵称'  nikeName,
            '用户密码'  password,
            '支付密码'  paypassword,
            '手机号码'  mobile,
            '邮箱'  email,
            '性别::0:男，1:女'  sex,
            '身份证号'  card,
            '用户余额'  amount,
            '月收入'  monthlyIncome,
            '用户头像'  userImage,
            '出生年月'  birthday,
            '注册方式'  createType,
            '居住地址'  address,
            '详细地址'  detailAddress,
            '会员等级'  memberUgrade,
            '用户类型 1：普通用户，2：活动会员,3：月卡会员 4:季卡会员 5：年卡会员'  memberType,
            '最后登陆日期'  lastLoginDate,
            '公司ID-组织架构'  companyId,
            '微信头像'  wechatImg,
            '微信昵称'  wechatNickname,
            'websocket的会话id'  wxOpenid,
            '微信登录唯一编号'  wxUnionid,
            '是否启用'  isdisable,
            '创建时间'  cdate,
            '创建人账号'  cuser,
            '修改时间'  udate,
            '修改人账号'  uuser,
            '备注'  remark,
            'id' id_hide
    </sql>
     -->


    <!-- 自动创建，可以修改 -->
    <select id="getDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field1"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr != ""' >
                and ${queryStr}
            </if>
            <if test='currentCompanyId != null and currentCompanyId != ""'>
                and company_id LIKE CONCAT(CONCAT('%', #{currentCompanyId}),'%')
            </if>
            <if test='code != null and code != ""'>
                and code LIKE CONCAT(CONCAT('%', #{code}),'%')
            </if>
            <if test='name != null and name != ""'>
                and name LIKE CONCAT(CONCAT('%', #{name}),'%')
            </if>
        </where>
        <if test='orderStr != null and orderStr != ""' >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field1"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr != ""' >
                and ${queryStr}
            </if>
            <if test='code != null and code != ""'>
                and code LIKE CONCAT(CONCAT('%', #{code}),'%')
            </if>
            <if test='name != null and name != ""'>
                and name LIKE CONCAT(CONCAT('%', #{name}),'%')
            </if>
        </where>
        <if test='orderStr != null and orderStr != ""' >
            order by ${orderStr}
        </if>
    </select>




</mapper>